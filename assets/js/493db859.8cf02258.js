"use strict";(self.webpackChunkrf_website=self.webpackChunkrf_website||[]).push([[6907],{63776:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=s(74848),t=s(28453);const o={title:"Software Dependency Risk",description:"Specific dependency risks due to relying on software.",slug:"/risks/Software-Dependency-Risk",featured:{class:"c",element:'<risk class="software-dependency" />'},sidebar_position:9,tweet:"yes",tags:["Risks","Software Dependency Risk"],part_of:"Dependency Risk"},r=void 0,a={id:"risks/Dependency-Risks/Software-Dependency-Risk",title:"Software Dependency Risk",description:"Specific dependency risks due to relying on software.",source:"@site/docs/risks/Dependency-Risks/Software-Dependency-Risk.md",sourceDirName:"risks/Dependency-Risks",slug:"/risks/Software-Dependency-Risk",permalink:"/risks/Software-Dependency-Risk",draft:!1,unlisted:!1,editUrl:"https://github.com/risk-first/website/blob/master/docs/risks/Dependency-Risks/Software-Dependency-Risk.md",tags:[{inline:!1,label:"Risks",permalink:"/tags/Risks"},{inline:!1,label:"Software Dependency Risk",permalink:"/tags/Software-Dependency-Risk"}],version:"current",sidebarPosition:9,frontMatter:{title:"Software Dependency Risk",description:"Specific dependency risks due to relying on software.",slug:"/risks/Software-Dependency-Risk",featured:{class:"c",element:'<risk class="software-dependency" />'},sidebar_position:9,tweet:"yes",tags:["Risks","Software Dependency Risk"],part_of:"Dependency Risk"},sidebar:"tutorialSidebar",previous:{title:"Deadline Risk",permalink:"/risks/Deadline-Risk"},next:{title:"Process Risk",permalink:"/risks/Process-Risk"}},d={},l=[{value:"Software Dependencies as Features",id:"software-dependencies-as-features",level:2},{value:"Programming Languages as Dependencies",id:"programming-languages-as-dependencies",level:2},{value:"Ergonomics Examined",id:"ergonomics-examined",level:2},{value:"Protocols and Ergonomics",id:"protocols-and-ergonomics",level:3},{value:"Designing Protocols",id:"designing-protocols",level:3},{value:"Types Of Software Dependencies",id:"types-of-software-dependencies",level:2},{value:"1. Code Your Own",id:"1-code-your-own",level:3},{value:"Unwritten Software",id:"unwritten-software",level:3},{value:"Conway&#39;s Law",id:"conways-law",level:3},{value:"2. Software Libraries",id:"2-software-libraries",level:3},{value:"Software Libraries - Attendant Risks",id:"software-libraries---attendant-risks",level:3},{value:"Sources",id:"sources",level:4},{value:"Complexity Risk?",id:"complexity-risk",level:3},{value:"3.  Software-as-a-Service",id:"3--software-as-a-service",level:3},{value:"Sources",id:"sources-1",level:4},{value:"Funding Software Dependencies",id:"funding-software-dependencies",level:3},{value:"Choice",id:"choice",level:2}];function c(e){const i={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{RiskIntro:r}=i;return r||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("RiskIntro",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r,{fm:o}),"\n",(0,n.jsxs)(i.p,{children:["In this section, we're going to look specifically at ",(0,n.jsx)(i.em,{children:"Software"})," dependencies, although many of the concerns we'll raise here apply equally to all the other types of dependency we outlined in ",(0,n.jsx)(i.a,{href:"/tags/Dependency-Risk",children:"Dependency Risk"}),"."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Software Dependency Risk",src:s(29732).A+"",width:"580",height:"347"})}),"\n",(0,n.jsx)(i.p,{children:"In this section we will look at:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"How Dependencies Provide Features"}),".   It might seem obvious, but the purpose of adding a software dependency is to ",(0,n.jsx)(i.em,{children:"reduce some other kind of risk"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Dependencies on Programming Languages"}),". Although you can usually write a piece of code in any language, different languages provide different features, specialising them for certain tasks.  This leads us on to consider..."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Ergonomics"}),".  The idea that software, just like any other tool, provides an ",(0,n.jsx)(i.em,{children:"interface"})," which should be designed to make it easy to use for a particular task."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Different Types of Software Dependencies"}),".   In a software project there are a number of ways you could depend on ",(0,n.jsx)(i.em,{children:"other software"}),".  Here, we break it down into some specific types (write-your-own, libraries and services) and look at the risk characteristics of each."]}),"\n",(0,n.jsxs)(i.li,{children:["Finally, we look at how software dependencies are ",(0,n.jsx)(i.strong,{children:"Funded"})," - that is, how they survive over time.  Here we focus on Open Source, Commercial and Ad-Supported options, and the risks introduced by each."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"software-dependencies-as-features",children:"Software Dependencies as Features"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.a,{href:"/tags/Software-Dependency-Risk",children:"Software Dependencies"})," allows us to construct dependency networks to give us all kinds of features and mitigate all kinds of risk.  That is, the features we are looking for in a dependency ",(0,n.jsx)(i.em,{children:"are to mitigate some kind of risk"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["For example, I might start using ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/WhatsApp",children:"WhatsApp"})," because I want to be able to send my friends photos and text messages.  However, it's likely that those same features allow us to mitigate ",(0,n.jsx)(i.a,{href:"/tags/Coordination-Risk",children:"Coordination Risk"})," when we're next trying to meet up."]}),"\n",(0,n.jsx)(i.p,{children:"Let's look at some more examples:"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Risk"}),(0,n.jsx)(i.th,{children:"Software Mitigating That Risk"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/tags/Coordination-Risk",children:"Coordination Risk"})}),(0,n.jsx)(i.td,{children:"Calendar tools,  Bug Tracking, Distributed Databases"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/tags/Schedule-Risk",children:"Schedule-Risk"})}),(0,n.jsx)(i.td,{children:"Planning Software, Project Management Software"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/tags/Communication-Risk",children:"Communication-Risk"})}),(0,n.jsx)(i.td,{children:"Email, Chat tools, CRM tools like SalesForce, Forums, Twitter, Protocols"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/tags/Process-Risk",children:"Process-Risk"})}),(0,n.jsx)(i.td,{children:"Reporting tools, online forms, process tracking tools"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/tags/Agency-Risk",children:"Agency-Risk"})}),(0,n.jsx)(i.td,{children:"Auditing tools, transaction logs, Time-Sheet software, HR Software"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/tags/Operational-Risk",children:"Operational-Risk"})}),(0,n.jsx)(i.td,{children:"Support tools like ZenDesk, Grafana, InfluxDB, Geneos, Security Tools"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/tags/Feature-Risk",children:"Feature-Risk"})}),(0,n.jsx)(i.td,{children:"Every piece of software you use!"})]})]})]}),"\n",(0,n.jsxs)(i.p,{children:["With this in mind, we can see that adding a software dependency is a trade-off:  we reduce some risk (as in the table above), but in return we pick up ",(0,n.jsx)(i.a,{href:"/tags/Software-Dependency-Risk",children:"Software Dependency Risk"})," as a result.  Whether this trade-off is worth it depends entirely on how well that software dependency resolves the original risk and how onerous the new risks are that we pick up."]}),"\n",(0,n.jsx)(i.h2,{id:"programming-languages-as-dependencies",children:"Programming Languages as Dependencies"}),"\n",(0,n.jsxs)(i.p,{children:["In the earlier section on ",(0,n.jsx)(i.a,{href:"/tags/Complexity-Risk",children:"Complexity Risk"})," we tackled ",(0,n.jsx)(i.a,{href:"/risks/Complexity-Risk#kolmogorov-complexity",children:"Kolmogorov Complexity"}),", and the idea that your codebase had some kind of minimal level of complexity based on the output it was trying to create.  This is a neat idea, but in a way, we cheated.  Let's look at how."]}),"\n",(0,n.jsx)(i.p,{children:"We were trying to figure out the shortest (Javascript) program to generate this output:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\n"})}),"\n",(0,n.jsx)(i.p,{children:"And we came up with this:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-javascript",children:'const ABCD="ABCD";                         (11 symbols)\n\nfunction out() {                           (7 symbols)\n    return ABCD.repeat(10)                 (7 symbols)\n}                                          (1 symbol)\n'})}),"\n",(0,n.jsxs)(i.p,{children:["Which had ",(0,n.jsx)(i.strong,{children:"26"})," symbols in it."]}),"\n",(0,n.jsxs)(i.p,{children:["Now, here's the cheat:  the ",(0,n.jsx)(i.code,{children:"repeat()"})," function was built into Javascript in 2015 in ",(0,n.jsx)(i.a,{href:"https://www.ecma-international.org/ecma-262/6.0/",children:"ECMAScript 6.0"}),".  If we'd had to program it ourselves, we might have added this:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-javascript",children:"function repeat(s,n) {                     (10 symbols)\n    var a=[];                              (7 symbols)\n    while(a.length<n){                     (9 symbols)  \n        a.push(s)                          (6 symbols)\n    }                                      (1 symbol)\n    return a.join('');                     (10 symbols)\n}                                          (1 symbol)\n"})}),"\n",(0,n.jsxs)(i.p,{children:["... which would be an extra ",(0,n.jsx)(i.strong,{children:"44"})," symbols (in total ",(0,n.jsx)(i.strong,{children:"70"}),"), and push us completely over the original string encoding of ",(0,n.jsx)(i.strong,{children:"53"})," symbols.   So, ",(0,n.jsx)(i.em,{children:"encoding language is important"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["Conversely, if ECMAScript 6.0 had introduced a function called ",(0,n.jsx)(i.code,{children:"abcdRepeater(n)"})," we'd have been able to do this:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-javascript",children:"function out() {                           (7 symbols)\n    return abcdRepeater(10)                (6 symbols)\n}                                          (1 symbol)\n"})}),"\n",(0,n.jsxs)(i.p,{children:[".. and re-encode to ",(0,n.jsx)(i.strong,{children:"14"})," symbols.  Now, clearly there are some problems with all this:"]}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Language Matters"}),":  the Kolmogorov complexity is dependent on the language, and the features the language has built in."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Exact Kolmogorov complexity is uncomputable anyway:"}),"  Since it's the ",(0,n.jsx)(i.em,{children:"theoretical"})," minimum program length, it's a fairly abstract idea, so we shouldn't get too hung up on this.  There is no function to be able to say, \"What's the Kolmogorov complexity of string X?\""]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"What is this new library function we've created?"}),"   Is ",(0,n.jsx)(i.code,{children:"abcdRepeater"})," going to be part of ",(0,n.jsx)(i.em,{children:"every"})," Javascript?  If so, then we've shifted ",(0,n.jsx)(i.a,{href:"/tags/Complexity-Risk",children:"Codebase Risk"})," away from ourselves, but we've pushed ",(0,n.jsx)(i.a,{href:"/tags/Conceptual-Integrity-Risk",children:"Conceptual Integrity Risk"})," onto every ",(0,n.jsx)(i.em,{children:"other"})," user of Javascript, because ",(0,n.jsx)(i.code,{children:"abcdRepeater"})," will be clogging up the JavaScript documentation for everyone, despite being rarely useful."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Are there equivalent functions for every single other string?"}),"  If so, then compilation is no longer a tractable problem because now we have a massive library of different ",(0,n.jsx)(i.code,{children:"XXXRepeater"})," functions to compile against.   So, what we ",(0,n.jsx)(i.em,{children:"lose"})," in ",(0,n.jsx)(i.a,{href:"/tags/Codebase-Risk",children:"Codebase Risk"})," we gain in ",(0,n.jsx)(i.a,{href:"/risks/Complexity-Risk#space-and-time-complexity",children:"Complexity Risk"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:["Language design, then, is about ",(0,n.jsx)(i.em,{children:"ergonomics"}),":"]})," x After you have passed the relatively low bar of providing ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Turing_completeness",children:"Turing Completeness"}),", the key is to provide ",(0,n.jsx)(i.em,{children:"useful"})," features that enable problems to be solved, without over-burdening the user with features they ",(0,n.jsx)(i.em,{children:"don't"})," need.  And in fact, all software is about this."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:["Language Ecosystems ",(0,n.jsx)(i.em,{children:"really"})," matter"]}),": all modern languages allow extensions via libraries, modules or plugins.  If your particular ",(0,n.jsx)(i.code,{children:"abcdRepeater"})," isn't in the main library,"]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"ergonomics-examined",children:"Ergonomics Examined"}),"\n",(0,n.jsxs)(i.p,{children:["Have a look at some physical tools, like a hammer, or spanner.  To look at them, they are probably ",(0,n.jsx)(i.em,{children:"simple"})," objects, obvious, strong and dependable.  Their entire behaviour is encapsulated in their form.  Now, if you have a drill or sander to hand, look at the design of this too.  If it's well-designed, then from the outside it is simple, perhaps with only one or two controls.  Inside, it is complex and contains a motor, perhaps a transformer, and is maybe made of a hundred different components."]}),"\n",(0,n.jsxs)(i.p,{children:["But outside, the form is simple, and designed for humans to use.   This is ",(0,n.jsx)(i.em,{children:(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Human_factors_and_ergonomics",children:"ergonomics"})}),":"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:['"Human factors and ergonomics (commonly referred to as Human Factors), is the application of psychological and physiological principles to the (engineering and) design of products, processes, and systems. The goal of human factors is to reduce human error, increase productivity, and enhance safety and comfort with a specific focus on the interaction between the human and the thing of interest."  - ',(0,n.jsxs)(i.a,{href:"https://en.wikipedia.org/wiki/Human_factors_and_ergonomics",children:["Human Factors and Ergonomics, ",(0,n.jsx)(i.em,{children:"Wikipedia"})]})]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"protocols-and-ergonomics",children:"Protocols and Ergonomics"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Software Dependency Ergonomics:  adopting simple dependencies",src:s(7992).A+"",width:"994",height:"265"})}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.em,{children:"interface"})," of a tool is the part we touch and interact with, via its protocol.    If you adopt ",(0,n.jsx)(i.em,{children:"simple"})," dependencies (as in the diagram above) you don't accrue ",(0,n.jsx)(i.a,{href:"/tags/Communication-Risk",children:"Communication Risk"}),", but you might have to orchestrate ",(0,n.jsx)(i.em,{children:"more"})," dependencies, picking up ",(0,n.jsx)(i.a,{href:"/tags/Complexity-Risk",children:"Complexity Risk"})," in your software."]}),"\n",(0,n.jsx)(i.p,{children:"The interface of a dependency expands when you ask it to do a wider variety of things.  An easy-to-use drill does one thing well: it turns drill-bits at useful levels of torque for drilling holes and sinking screws.  But if you wanted it to also operate as a lathe, a sander or a strimmer (all basically mechanical things going round) you would have to sacrifice the conceptual integrity for a more complex protocol, probably including adapters, extensions, handles and so on."}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Software Dependency Ergonomics:  adopting complex dependencies",src:s(46827).A+"",width:"1206",height:"265"})}),"\n",(0,n.jsxs)(i.p,{children:["Adopting complex software dependencies (as shown in the diagram above) might allow you to avoid complexity in your own codebase.  However, this likely gives you a longer learning curve before you understand the tool, and you ",(0,n.jsx)(i.em,{children:"might"})," run into issues later where the tool fails to do something critical that you wanted (a ",(0,n.jsx)(i.a,{href:"/tags/Dead-End-Risk",children:"Dead End Risk"}),")."]}),"\n",(0,n.jsx)(i.p,{children:"Using a software dependency allows us to split a project's complexity into two:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["The inner complexity of the dependency (how it works internally, its own ",(0,n.jsx)(i.a,{href:"/risks/Complexity-Risk#kolmogorov-complexity",children:"internal complexity"}),")."]}),"\n",(0,n.jsxs)(i.li,{children:["The complexity of the instructions that we need to write to make the tool work, ",(0,n.jsx)(i.a,{href:"/tags/Protocol-Risk",children:"the protocol complexity"}),", which will be a function of the complexity of the tool itself."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Types of Complexity For a Software Dependency",src:s(45858).A+"",width:"970",height:"642"})}),"\n",(0,n.jsxs)(i.p,{children:["As the above diagram shows, the bulk of the complexity of a software tool is hidden behind its interface.  The more complex the ",(0,n.jsx)(i.em,{children:"purpose"})," of the tool, the more complex the interface will need to be."]}),"\n",(0,n.jsx)(i.h3,{id:"designing-protocols",children:"Designing Protocols"}),"\n",(0,n.jsxs)(i.p,{children:["Software is not constrained by ",(0,n.jsx)(i.em,{children:"physical"})," ergonomics in the same way as a tool is.  But ideally, it should have conceptual ergonomics: complexity is hidden away from the user behind the ",(0,n.jsx)(i.em,{children:"User Interface"}),".  This is the familiar concept of ",(0,n.jsx)(i.a,{href:"/tags/Abstraction",children:"Abstraction"})," we've already looked at.  As we saw in ",(0,n.jsx)(i.a,{href:"/tags/Learning-Curve-Risk",children:"Communication Risk"}),", when we use a new protocol, we face ",(0,n.jsx)(i.a,{href:"/tags/Learning-Curve-Risk",children:"Learning Curve Risk"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["To minimise this, we should apply the ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Principle_of_least_astonishment",children:"Principal Of Least Astonishment"})," when designing our own protocols:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"The abstractions should map easily to how the user expects the tool to work."})," For example, I ",(0,n.jsx)(i.em,{children:"expect"})," the trigger on a drill to start the drill turning."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"The abstractions should leverage existing idioms and knowledge."})," In a new car I ",(0,n.jsx)(i.em,{children:"expect"})," to know what the symbols on the dashboard mean because I've driven other cars."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"The abstractions provide me with only the functions I need."})," Because everything else is confusing and gets in the way."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"types-of-software-dependencies",children:"Types Of Software Dependencies"}),"\n",(0,n.jsx)(i.p,{children:"There are lots of ways you can depend on software.  Here though, we're going to focus on just three main types:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Code Your Own"}),": write some code ourselves to meet the dependency."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Software Libraries"}),":  importing code from the Internet, and using it in our project.  Often, libraries are Open Source (this is what we'll consider here)."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Software-as-a-Service (SaaS)"}),": calling a service on the Internet, (probably via ",(0,n.jsx)(i.code,{children:"http"}),")  This is often known as ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Software_as_a_service",children:"SaaS, or Software as a Service"}),"."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"All 3 approaches involve a different risk-profile.  Let's look at each in turn, from the perspective of which risks get mitigated, and which risks are exacerbated."}),"\n",(0,n.jsx)(i.h3,{id:"1-code-your-own",children:"1. Code Your Own"}),"\n",(0,n.jsxs)(i.p,{children:["Way before the Internet, this was the only game in town.  Tool support was very thin-on-the-ground.  Algorithms could be distributed as code snippets ",(0,n.jsx)(i.em,{children:"in books and magazines"}),' which could be transcribed and run, and added to your program.  This spirit lives on somewhat in StackOverflow and JSFiddle, where you are expected to "adopt" others\' code into your own project. Code-your-own is still the best option if you have highly bespoke requirements, or are dealing with unusual environmental contexts.']}),"\n",(0,n.jsxs)(i.p,{children:["One of the hidden risks of embarking on a code-your-own approach is that the features you need are ",(0,n.jsx)(i.em,{children:"not"})," apparent from the outset.  What might appear to be a trivial implementation of some piece of functionality can often turn into its own industry as more and more hidden ",(0,n.jsx)(i.a,{href:"/tags/Feature-Risk",children:"Feature Risk"})," is uncovered.  For example, as we discussed in our earlier treatment of ",(0,n.jsx)(i.a,{href:"/tags/Dead-End-Risk",children:"Dead-End Risk"}),", building log-in screens ",(0,n.jsx)(i.em,{children:"seemed like a good idea"}),".  However, this gets out-of-hand fast when you need:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"A password reset screen"}),"\n",(0,n.jsx)(i.li,{children:"To email the reset links to the user"}),"\n",(0,n.jsx)(i.li,{children:"An email verification screen"}),"\n",(0,n.jsx)(i.li,{children:"A lost account screen"}),"\n",(0,n.jsx)(i.li,{children:"Reminders to complete the sign up process"}),"\n",(0,n.jsx)(i.li,{children:"... and so on."}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Code-Your-Own mitigates immediate feature risk, but at the expense of schedule risk, complexity risk and communication risk.  There is also a hidden risk of features you don&#39;t yet know you need.",src:s(14037).A+"",width:"1437",height:"350"})}),"\n",(0,n.jsx)(i.h3,{id:"unwritten-software",children:"Unwritten Software"}),"\n",(0,n.jsxs)(i.p,{children:["Sometimes you will pick up ",(0,n.jsx)(i.a,{href:"/tags/Dependency-Risk",children:"Dependency Risk"})," from ",(0,n.jsx)(i.em,{children:"unwritten software"}),".  This commonly happens when work is divided amongst team members, or teams."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Sometimes, a module you&#39;re writing will depend on unwritten code",src:s(62505).A+"",width:"699",height:"212"})}),"\n",(0,n.jsxs)(i.p,{children:["If a component ",(0,n.jsx)(i.strong,{children:"A"})," of our project ",(0,n.jsx)(i.em,{children:"depends"})," on ",(0,n.jsx)(i.strong,{children:"B"})," for some kind of processing, you might not be able to complete ",(0,n.jsx)(i.strong,{children:"A"})," before writing ",(0,n.jsx)(i.strong,{children:"B"}),".   This makes ",(0,n.jsx)(i.em,{children:"scheduling"})," the project harder, and if component ",(0,n.jsx)(i.strong,{children:"A"})," is a risky part of the project, then the chances are you'll want to mitigate risk there first."]}),"\n",(0,n.jsxs)(i.p,{children:["But it also hugely increases ",(0,n.jsx)(i.a,{href:"/tags/Communication-Risk",children:"Communication Risk"})," because now you're being asked to communicate with a dependency that doesn't really exist yet, ",(0,n.jsx)(i.em,{children:"let alone"})," have any documentation."]}),"\n",(0,n.jsx)(i.p,{children:"There are a couple of ways of doing this:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Standards"}),":  if component ",(0,n.jsx)(i.strong,{children:"B"})," is a database, a queue, mail gateway or something else with a standard interface, then you're in luck.   Write ",(0,n.jsx)(i.strong,{children:"A"})," to those standards, and find a cheap, simple implementation to test with.  This gives you time to sort out exactly what implementation of ",(0,n.jsx)(i.strong,{children:"B"})," you're going for.  This is not a great long-term solution, because obviously, you're not using the ",(0,n.jsx)(i.em,{children:"real"})," dependency- you might get surprised when the behaviour of the real component is subtly different.  But it can reduce ",(0,n.jsx)(i.a,{href:"/tags/Schedule-Risk",children:"Schedule Risk"})," in the short-term."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Coding To Interfaces"}),":  if standards aren't an option, but the surface area of ",(0,n.jsx)(i.strong,{children:"B"})," that ",(0,n.jsx)(i.strong,{children:"A"})," uses is quite small and obvious, you can write a small interface for it, and work behind that, using a ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Mock_object",children:"Mock"})," for ",(0,n.jsx)(i.strong,{children:"B"})," while you're waiting for finished component.  Write the interface to cover only what ",(0,n.jsx)(i.strong,{children:"A"})," ",(0,n.jsx)(i.em,{children:"needs"}),", rather than everything that ",(0,n.jsx)(i.strong,{children:"B"})," ",(0,n.jsx)(i.em,{children:"does"})," in order to minimise the risk of ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Leaky_abstraction",children:"Leaky Abstractions"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Coding to a standard on an interface breaks the dependency on unwritten software",src:s(77443).A+"",width:"964",height:"355"})}),"\n",(0,n.jsx)(i.h3,{id:"conways-law",children:"Conway's Law"}),"\n",(0,n.jsxs)(i.p,{children:["Due to channel bandwidth limitations, if the dependency is being written by another person, another team or in another country, ",(0,n.jsx)(i.a,{href:"/tags/Communication-Risk",children:"Communication Risk"})," piles up.   When this happens, you will want to minimise the interface complexity ",(0,n.jsx)(i.em,{children:"as much as possible"}),", since the more complex the interface, the worse the ",(0,n.jsx)(i.a,{href:"/tags/Communication-Risk",children:"Communication Risk"})," will be.  The tendency then is to make the interfaces between teams or people ",(0,n.jsx)(i.em,{children:"as simple as possible"}),", modularising along these organisational boundaries."]}),"\n",(0,n.jsx)(i.p,{children:"In essence, this is Conway's Law:"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:['"organisations which design systems ... are constrained to produce designs which are copies of the communication structures of these organisations." - ',(0,n.jsxs)(i.a,{href:"https://en.wikipedia.org/wiki/Conway%27s_law",children:["Melvin Conway, ",(0,n.jsx)(i.em,{children:"Conway's Law"})]})]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"2-software-libraries",children:"2. Software Libraries"}),"\n",(0,n.jsxs)(i.p,{children:["By choosing a particular software library, we are making a move on the ",(0,n.jsx)(i.a,{href:"/risks/Risk-Landscape",children:"Risk Landscape"})," in the hope of moving to a place with more favourable risks.  Typically, using library code offers a ",(0,n.jsx)(i.a,{href:"/tags/Schedule-Risk",children:"Schedule Risk"})," and ",(0,n.jsx)(i.a,{href:"/tags/Complexity-Risk",children:"Complexity Risk"})," Silver Bullet - a high-speed route over the risk landscape to somewhere nearer where we want to be.  But, in return we expect to pick up:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.a,{href:"/tags/Communication-Risk",children:"Communication Risk"})}),": because we now have to learn how to communicate with this new dependency."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.a,{href:"/tags/Boundary-Risk",children:"Boundary Risk"})}),": - because now are limited to using the functionality provided by this dependency.  We have chosen it over alternatives and changing to something else would be more work and therefore costly."]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["But, it's quite possible that we could wind up in a worse place than we started out, by using a library that's out-of-date, riddled with bugs or badly supported.  i.e. full of new, hidden ",(0,n.jsx)(i.a,{href:"/tags/Feature-Risk",children:"Feature Risk"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["It's ",(0,n.jsx)(i.em,{children:"really easy"})," to make bad decisions about which tools to use because the tools don't (generally) advertise their deficiencies.  After all, they don't generally know how ",(0,n.jsx)(i.em,{children:"you"})," will want to use them."]}),"\n",(0,n.jsx)(i.h3,{id:"software-libraries---attendant-risks",children:"Software Libraries - Attendant Risks"}),"\n",(0,n.jsx)(i.p,{children:'Currently, choosing software dependencies looks like a "bounded rationality"-type process:'}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:['"Bounded rationality is the idea that when individuals make decisions, their rationality is limited by the tractability of the decision problem, the cognitive limitations of their minds, and the time available to make the decision. " - ',(0,n.jsxs)(i.a,{href:"https://en.wikipedia.org/wiki/Bounded_rationality",children:["Bounded Rationality, ",(0,n.jsx)(i.em,{children:"Wikipedia"})]})]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Unfortunately, we know that most decisions ",(0,n.jsx)(i.em,{children:"don't"})," really get made this way.  We have things like ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Confirmation_bias",children:"Confirmation Bias"})," (looking for evidence to support a decision you've already made) and ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Cognitive_inertia",children:"Cognitive Inertia"})," (ignoring evidence that would require you to change your mind) to contend with."]}),"\n",(0,n.jsxs)(i.p,{children:["But, leaving that aside, let's try to build a model of what this decision making process ",(0,n.jsx)(i.em,{children:"should"})," involve.  Luckily, other authors have already considered the problem of choosing good software libraries, so let's start there."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Software Library Dependencies, Attendant Risks",src:s(43095).A+"",width:"1801",height:"2111"})}),"\n",(0,n.jsx)(i.p,{children:"In the table above, I am summarising three different sources (linked at the end of the section), which give descriptions of which factors to look for when choosing open-source libraries.  Here are some take-aways:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.a,{href:"/tags/Feature-Risk",children:"Feature Risk"})," is a big concern"]}),":   How can you be sure that the project will do what you want it to do ahead of schedule?  Will it contain bugs or missing features?  By looking at factors like ",(0,n.jsx)(i.em,{children:"release frequency"})," and ",(0,n.jsx)(i.em,{children:"size of the community"})," you get a good feel for this which is difficult to fake."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.a,{href:"/tags/Boundary-Risk",children:"Boundary Risk"})," is also very important"]}),":  You are going to have to ",(0,n.jsx)(i.em,{children:"live"})," with your choices for the duration of the project, so it's worth spending the effort to either ensure that you're not going to regret the decision, or that you can change direction later."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:["Third is ",(0,n.jsx)(i.a,{href:"/tags/Communication-Risk",children:"Communication Risk"})]}),':  how well does the project deal with its users?  If a project is "famous", then it has communicated its usefulness to a wide, appreciative audience.  Avoiding ',(0,n.jsx)(i.a,{href:"/tags/Communication-Risk",children:"Communication Risk"})," is also a good reason to pick ",(0,n.jsx)(i.em,{children:"tools you are already familiar with"}),"."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Software Libraries Risk Tradeoff",src:s(93482).A+"",width:"1488",height:"350"})}),"\n",(0,n.jsx)(i.h4,{id:"sources",children:"Sources"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"sd1"}),": ",(0,n.jsx)(i.a,{href:"https://www.software.ac.uk/resources/guides/defending-your-code-against-dependency-problems",children:"Defending your code against dependency problems"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"sd2"}),": ",(0,n.jsx)(i.a,{href:"https://stackoverflow.com/questions/2960371/how-to-choose-an-open-source-library",children:"How to choose an open source library"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"sd3"}),": ",(0,n.jsx)(i.a,{href:"https://www.forbes.com/sites/forbestechcouncil/2017/07/20/open-source-to-use-or-not-to-use-and-how-to-choose",children:"Open Source - To use or not to use"})]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"complexity-risk",children:"Complexity Risk?"}),"\n",(0,n.jsxs)(i.p,{children:["One thing that none of the sources in the table consider (at least from the outset) is the ",(0,n.jsx)(i.a,{href:"/tags/Complexity-Risk",children:"Complexity Risk"})," of using a solution:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Does it drag in lots of extra dependencies that seem unnecessary for the job in hand?  If so, you could end up in ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Dependency_hell",children:"Dependency Hell"}),", with multiple, conflicting versions of libraries in the project."]}),"\n",(0,n.jsxs)(i.li,{children:["Do you already have a dependency providing this functionality?  So many times, I've worked on projects that import a ",(0,n.jsx)(i.em,{children:"new"})," dependency when some existing (perhaps transitive) dependency has ",(0,n.jsx)(i.em,{children:"already brought in the functionality"}),".  For example, there are plenty of libraries for ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/JSON",children:"JSON"})," marshalling, but if I'm also using a web framework the chances are it already has a dependency on one already."]}),"\n",(0,n.jsx)(i.li,{children:"Does it contain lots of functionality that isn\u2019t relevant to the task you want it to accomplish?  e.g. Using Java when a shell script would do (on a non-Java project)"}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Sometimes, the amount of complexity ",(0,n.jsx)(i.em,{children:"goes up"})," when you use a dependency for ",(0,n.jsx)(i.em,{children:"good reason."}),"  For example, in Java you can use ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Java_Database_Connectivity",children:"Java Database Connectivity (JDBC)"})," to interface with various types of database.  ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Spring_Framework",children:"Spring Framework"})," (a popular Java library) provides a thing called a ",(0,n.jsx)(i.code,{children:"JDBCTemplate"}),".  This actually makes your code ",(0,n.jsx)(i.em,{children:"more"})," complex, and can prove very difficult to debug.  However, it prevents some security issues, handles resource disposal and makes database access more efficient.  None of those are essential to interfacing with the database, but not having them is ",(0,n.jsx)(i.a,{href:"/tags/Operational-Risk",children:"Operational Risk"})," that can bite you later on."]}),"\n",(0,n.jsx)(i.h3,{id:"3--software-as-a-service",children:"3.  Software-as-a-Service"}),"\n",(0,n.jsx)(i.p,{children:"Businesses opt for Software-as-a-Service (SaaS) because:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["It promises to vastly reduce the ",(0,n.jsx)(i.a,{href:"/tags/Complexity-Risk",children:"Complexity Risk"})," they face in their organisations. e.g. managing the software or making changes to it."]}),"\n",(0,n.jsxs)(i.li,{children:["Payment is usually based on ",(0,n.jsx)(i.em,{children:"usage"}),", mitigating ",(0,n.jsx)(i.a,{href:"/tags/Funding-Risk",children:"Funding Risk"}),".  e.g. Instead of having to pay up-front for a license and hire in-house software administrators, they can leave this function to the experts."]}),"\n",(0,n.jsxs)(i.li,{children:["Potentially, you out-source the ",(0,n.jsx)(i.a,{href:"/tags/Operational-Risk",children:"Operational Risk"})," to a third party. e.g. ensuring availability, making sure data is secure and so on."]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["SaaS is now a very convenient way to provide ",(0,n.jsx)(i.em,{children:"commercial"})," software.   Popular examples of SaaS might be ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Salesforce.com",children:"SalesForce"}),", or ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Gmail",children:"GMail"}),".  Both of which follow the commonly-used ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Freemium",children:"Freemium"})," model, where the basic service is provided free but upgrading to a paid account gives extra benefits."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Software-as-a-Service (SaaS) Attendant Risks",src:s(28188).A+"",width:"1736",height:"1603"})}),"\n",(0,n.jsx)(i.p,{children:"The diagram above summarises the risks raised in some of the available literature (sources below).  Some take-aways:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Clearly, ",(0,n.jsx)(i.a,{href:"/tags/Operational-Risk",children:"Operational Risk"})," is now a big concern.  By depending on a third-party organisation you are tying yourself to its success or failure in a much bigger way than just by using a piece of open-source software.   What happens to data security, both in the data centre and over the Internet?  Although you might choose a SaaS solution to mitigate ",(0,n.jsx)(i.em,{children:"internal"})," ",(0,n.jsx)(i.a,{href:"/tags/Operational-Risk",children:"Operational Risk"}),', you might just be "throwing it over the wall" to a third party, who might do a worse job.']}),"\n",(0,n.jsxs)(i.li,{children:["With ",(0,n.jsx)(i.a,{href:"/tags/Feature-Risk",children:"Feature Risk"})," you now have to contend with the fact that the software will be upgraded ",(0,n.jsx)(i.em,{children:"outside your control"}),", and you may have limited control over which features get added or changed."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.a,{href:"/tags/Boundary-Risk",children:"Boundary Risk"})," is also a different proposition: you are tied to the software provider by ",(0,n.jsx)(i.em,{children:"a contract"}),".  If the service changes in the future, or isn't to your liking, you can't simply fork the code (like you could with an open source project)."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Risk Tradeoff From Using Software as a Service (SaaS)",src:s(22933).A+"",width:"1292",height:"647"})}),"\n",(0,n.jsx)(i.h4,{id:"sources-1",children:"Sources"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"sd4"}),": ",(0,n.jsx)(i.a,{href:"https://www.zdnet.com/article/saas-checklist-nine-factors-to-consider-when-selecting-a-vendor",children:"SaaS Checklist - Nine Factors to Consider"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"sd5"}),": ",(0,n.jsx)(i.a,{href:"https://sandhill.com/article/how-to-evaluate-saas-vendors-five-key-considerations/",children:"How to Evaluate SaaS Vendors."})]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"funding-software-dependencies",children:"Funding Software Dependencies"}),"\n",(0,n.jsx)(i.p,{children:"We've looked at just 3 different ways of providing a software dependency: Code-Your-Own, Libraries and SaaS."}),"\n",(0,n.jsxs)(i.p,{children:["But these are not the only ways to do it, and there's clearly no one ",(0,n.jsx)(i.em,{children:"right"}),' way.   Although here we have looked just at "Commercial SaaS" and "Free Open Source", in reality, these are just points in a two-dimensional space involving ',(0,n.jsx)(i.em,{children:"Pricing"})," and ",(0,n.jsx)(i.em,{children:"Hosting"}),"."]}),"\n",(0,n.jsx)(i.p,{children:"Let's expand this view slightly and look at where different pieces of software sit on these axes:"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Software Dependencies, Pricing, Delivery Matrix Risk Profiles",src:s(69805).A+"",width:"1420",height:"1039"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Where there is value in ",(0,n.jsxs)(i.strong,{children:["the ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Network_effect",children:"Network Effect"})]})," it's often a sign that the software will be free, or open source:  programming languages and Linux are the obvious examples of this.  Bugs are easier to find when there are lots of eyes looking, and learning the skill to use the software has less ",(0,n.jsx)(i.a,{href:"/tags/Boundary-Risk",children:"Boundary Risk"})," if you know you'll be able to use it at any point in the future."]}),"\n",(0,n.jsxs)(i.li,{children:["At the other end of the spectrum, clients will happily pay for software if it clearly ",(0,n.jsxs)(i.strong,{children:["reduces ",(0,n.jsx)(i.a,{href:"/tags/Operational-Risk",children:"Operational Risk"})]}),".  Take ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Amazon_Web_Services",children:"Amazon Web Services (AWS)"}),".  The essential trade here is that you substitute the complexity of hosting and maintaining various pieces of hardware, in exchange for metered payments (",(0,n.jsx)(i.a,{href:"/tags/Funding-Risk",children:"Funding Risk"})," for you).  Since the AWS ",(0,n.jsx)(i.em,{children:"interfaces"})," are specific to Amazon, there is significant ",(0,n.jsx)(i.a,{href:"/tags/Boundary-Risk",children:"Boundary Risk"})," in choosing this option."]}),"\n",(0,n.jsxs)(i.li,{children:["In the middle there are lots of ",(0,n.jsx)(i.strong,{children:"substitute options"})," and therefore high competition.  Because of this prices are pushed towards zero and therefore often advertising is used to monetise the product.  ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Angry_Birds",children:"Angry Birds"})," is a classic example:  initially, it had demo and paid versions, however ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Rovio_Entertainment",children:"Rovio"})," discovered there was much more money to be made through advertising than from the ",(0,n.jsx)(i.a,{href:"https://www.deconstructoroffun.com/blog/2017/6/11/how-angry-birds-2-multiplied-quadrupled-revenue-in-a-year",children:"paid-for app"}),"."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"choice",children:"Choice"}),"\n",(0,n.jsxs)(i.p,{children:["Choosing dependencies can be extremely difficult.  As we discussed above, the usefulness of any tool depends on its fit for purpose, its ",(0,n.jsx)(i.em,{children:"ergonomics within a given context"}),".  It's all too easy to pick a good tool for the wrong job:"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:['"I suppose it is tempting, if the only tool you have is a hammer, to treat everything as if it were a nail." - ',(0,n.jsxs)(i.a,{href:"https://en.wiktionary.org/wiki/if_all_you_have_is_a_hammer,_everything_looks_like_a_nail",children:["Abraham Maslow, ",(0,n.jsx)(i.em,{children:"Toward a Psychology of Being"})]})]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Having chosen a dependency, whether or not you end up in a more favourable position risk-wise is going to depend heavily on the quality of the execution and the skill of the implementer.  With software dependencies we often have to live with the decisions we make for a long time: ",(0,n.jsx)(i.em,{children:"choosing"})," the software dependency is far easier than ",(0,n.jsx)(i.em,{children:"changing it later"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["Let's take a closer look at this problem in the section on ",(0,n.jsx)(i.a,{href:"/tags/Boundary-Risk",children:"Boundary Risk"}),".  But first, lets looks at ",(0,n.jsx)(i.a,{href:"/tags/Process-Risk",children:"processes"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},14037:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/code-your-own-7410e3fd1c0dc61fa6b7781592129c11.svg"},7992:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/ergonomics1-15080bc342b4cd01905cb35e5ccc20f5.svg"},46827:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/ergonomics2-477674732d759d8826a5745f5324af3e.svg"},93482:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/library-a58c703f9d3f6117f12f12213b4fa79e.svg"},45858:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/protocol-complexity-e61e69dbd6a85ec202d9c70104817d6d.svg"},22933:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/saas-eb2480e8fff7e8560c4c635830afb0f9.svg"},29732:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/software-dependency-risk-8f5871c964b1282ae4391e8f69c78566.svg"},43095:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/software_dependency_table_1_large-42b3b8c56046f3c76ea49eb6c4dde437.svg"},28188:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/software_dependency_table_2_large-b99e1313cbcf8d1714f7da23133638ae.svg"},69805:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/software_dependency_table_3_sideways-de95ab4fb363ddf1002d330f2db285a4.svg"},77443:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/unwritten-mitigation-43769df7b4fb1579ecb7f1b1e56aec8d.svg"},62505:(e,i,s)=>{s.d(i,{A:()=>n});const n=s.p+"assets/images/unwritten-ae412d6cf5bee16e800b10fcba3e6b4d.svg"},28453:(e,i,s)=>{s.d(i,{R:()=>r,x:()=>a});var n=s(96540);const t={},o=n.createContext(t);function r(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);