"use strict";(self.webpackChunkrf_website=self.webpackChunkrf_website||[]).push([[8379],{33687:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=i(74848),n=i(28453);const r={title:"Ecosystem Diversity",description:"Encouraging the development of multiple, independent AI models instead of relying on a single dominant system.",featured:{class:"c",element:"<action>Ecosystem Diversity</action>"},tags:["Ecosystem Diversity","AI Practice"],practice:{mitigates:[{tag:"Loss Of Diversity",reason:"Diversified AI systems reduce systemic risks and encourage innovation.",efficacy:"High"}]}},o=void 0,c={id:"ai/Practices/Ecosystem-Diversity",title:"Ecosystem Diversity",description:"Encouraging the development of multiple, independent AI models instead of relying on a single dominant system.",source:"@site/docs/ai/Practices/Ecosystem-Diversity.md",sourceDirName:"ai/Practices",slug:"/ai/Practices/Ecosystem-Diversity",permalink:"/ai/Practices/Ecosystem-Diversity",draft:!1,unlisted:!1,editUrl:"https://github.com/risk-first/website/blob/master/docs/ai/Practices/Ecosystem-Diversity.md",tags:[{inline:!1,label:"Ecosystem Diversity",permalink:"/tags/Ecosystem-Diversity"},{inline:!1,label:"AI Practice",permalink:"/tags/AI-Practice"}],version:"current",frontMatter:{title:"Ecosystem Diversity",description:"Encouraging the development of multiple, independent AI models instead of relying on a single dominant system.",featured:{class:"c",element:"<action>Ecosystem Diversity</action>"},tags:["Ecosystem Diversity","AI Practice"],practice:{mitigates:[{tag:"Loss Of Diversity",reason:"Diversified AI systems reduce systemic risks and encourage innovation.",efficacy:"High"}]}},sidebar:"tutorialSidebar",previous:{title:"AI As Judge",permalink:"/ai/Practices/AI-As-Judge"},next:{title:"Global AI Governance",permalink:"/ai/Practices/Global-AI-Governance"}},a={},l=[];function d(e){const t={li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components},{PracticeIntro:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("PracticeIntro",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i,{details:r}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Encouraging the development of multiple, independent AI models instead of relying on a single dominant system."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Requires regulatory incentives or decentralised AI development initiatives."}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var s=i(96540);const n={},r=s.createContext(n);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);