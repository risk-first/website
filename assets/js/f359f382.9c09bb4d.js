"use strict";(self.webpackChunkrf_website=self.webpackChunkrf_website||[]).push([[8451],{7255:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var i=n(74848),s=n(28453);const a={title:"User Acceptance Testing",description:"Having a customer representative available onsite for feedback.",tags:["Practice","User Acceptance Testing"],featured:{class:"c",element:"<action>UAT</action>"},practice:{aka:["End User Testing","Client Acceptance Testing","Customer Validation","UAT","Beta Testing","Dogfooding"],mitigates:[{tag:"Feature Fit Risk",reason:"Ensures that the software meets the client's requirements and expectations."},{tag:"Implementation Risk",reason:"Validates that the implementation meets the specified requirements."},{tag:"Communication Risk",reason:"Facilitates feedback from end users, improving the final product."},{tag:"Internal Model Risk",reason:"As a feedback mechanism, UAT helps improve understanding of users and their requirements."}],attendant:[{tag:"Schedule Risk",reason:"UAT can be time-consuming, potentially delaying the release."},{tag:"Coordination Risk",reason:"Requires coordination between the development team and end users."},{tag:"Deadline Risk",reason:"Can often go on longer than expected, leading to deadline issues."}],related:["../Planning-and-Management/Requirements-Capture","../Communication-and-Collaboration/Demo","../Development-and-Coding/Unit-Testing"]}},r=void 0,c={id:"practices/Testing-and-Quality-Assurance/User-Acceptance-Testing",title:"User Acceptance Testing",description:"Having a customer representative available onsite for feedback.",source:"@site/docs/practices/Testing-and-Quality-Assurance/User-Acceptance-Testing.md",sourceDirName:"practices/Testing-and-Quality-Assurance",slug:"/practices/Testing-and-Quality-Assurance/User-Acceptance-Testing",permalink:"/practices/Testing-and-Quality-Assurance/User-Acceptance-Testing",draft:!1,unlisted:!1,editUrl:"https://github.com/risk-first/website/blob/master/docs/practices/Testing-and-Quality-Assurance/User-Acceptance-Testing.md",tags:[{inline:!1,label:"Practice",permalink:"/tags/Practice"},{inline:!1,label:"User Acceptance Testing",permalink:"/tags/User-Acceptance-Testing"}],version:"current",frontMatter:{title:"User Acceptance Testing",description:"Having a customer representative available onsite for feedback.",tags:["Practice","User Acceptance Testing"],featured:{class:"c",element:"<action>UAT</action>"},practice:{aka:["End User Testing","Client Acceptance Testing","Customer Validation","UAT","Beta Testing","Dogfooding"],mitigates:[{tag:"Feature Fit Risk",reason:"Ensures that the software meets the client's requirements and expectations."},{tag:"Implementation Risk",reason:"Validates that the implementation meets the specified requirements."},{tag:"Communication Risk",reason:"Facilitates feedback from end users, improving the final product."},{tag:"Internal Model Risk",reason:"As a feedback mechanism, UAT helps improve understanding of users and their requirements."}],attendant:[{tag:"Schedule Risk",reason:"UAT can be time-consuming, potentially delaying the release."},{tag:"Coordination Risk",reason:"Requires coordination between the development team and end users."},{tag:"Deadline Risk",reason:"Can often go on longer than expected, leading to deadline issues."}],related:["../Planning-and-Management/Requirements-Capture","../Communication-and-Collaboration/Demo","../Development-and-Coding/Unit-Testing"]}},sidebar:"tutorialSidebar",previous:{title:"Security Testing",permalink:"/practices/Testing-and-Quality-Assurance/Security-Testing"},next:{title:"Glossary of Practices",permalink:"/practices/Glossary-Of-Practices"}},o={},l=[{value:"Description",id:"description",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components},{PracticeIntro:n,TagList:r}=t;return n||u("PracticeIntro",!0),r||u("TagList",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{details:a}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["\"User acceptance testing (UAT) is a phase of software development in which the software is tested in the 'real world' by the intended audience.\" - ",(0,i.jsxs)(t.a,{href:"https://en.wikipedia.org/wiki/User_acceptance_testing",children:["User acceptance testing, ",(0,i.jsx)(t.em,{children:"Wikipedia"})]})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"User Acceptance Testing (UAT) involves having end users test the software to ensure it meets their requirements and expectations. This practice helps in identifying any issues that may not have been caught during previous testing phases and ensures that the final product is user-friendly and functional."}),"\n",(0,i.jsx)(t.p,{children:"See:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/thinking/Consider-Payoff",children:"Consider Payoff"})}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/thinking/Development-Process#a-toy-process",children:"Development Process"}),"_"]}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/thinking/Meeting-Reality#example-user-acceptance-testing-uat",children:"User Acceptance Testing (Meeting Reality)"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/thinking/Cadence#development-cycle-time",children:"Manual Testing"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/thinking/One-Size-Fits-No-One",children:"Waterfall (One Size Fits No One)"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsx)(r,{tag:"User-Acceptance-Testing"})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var i=n(96540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);