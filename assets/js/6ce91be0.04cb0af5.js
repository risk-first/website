"use strict";(self.webpackChunkrf_website=self.webpackChunkrf_website||[]).push([[3306],{52502:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>n,metadata:()=>r,toc:()=>d});var t=i(74848),o=i(28453);const n={template:"post",title:"4. Agile vs Open Source",description:"Talk given to Simply Business about Risk-First and Open Source",author:"rob",featured:{class:"bg1",element:'<image-artifact imgsrc="/public/templates/risk-first/posts/scrum.svg">Agile vs Open Source</image-artifact>'},date:"2022-04-30 16:32:03 +0000",tags:["Presentations"],sidebar_position:4,hide_table_of_contents:!0},a=void 0,r={id:"presentations/AgileVsOpenSource/index",title:"4. Agile vs Open Source",description:"Talk given to Simply Business about Risk-First and Open Source",source:"@site/docs/presentations/AgileVsOpenSource/index.md",sourceDirName:"presentations/AgileVsOpenSource",slug:"/presentations/AgileVsOpenSource/",permalink:"/presentations/AgileVsOpenSource/",draft:!1,unlisted:!1,editUrl:"https://github.com/risk-first/website/blob/master/docs/presentations/AgileVsOpenSource/index.md",tags:[{inline:!1,label:"Presentations",permalink:"/tags/Presentations"}],version:"current",sidebarPosition:4,frontMatter:{template:"post",title:"4. Agile vs Open Source",description:"Talk given to Simply Business about Risk-First and Open Source",author:"rob",featured:{class:"bg1",element:'<image-artifact imgsrc="/public/templates/risk-first/posts/scrum.svg">Agile vs Open Source</image-artifact>'},date:"2022-04-30 16:32:03 +0000",tags:["Presentations"],sidebar_position:4,hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"3. A Short History Of Feedback",permalink:"/presentations/HistoryOfFeedback/"},next:{title:"COVID, Agile, ChatOps",permalink:"/presentations/BotsChatOpsCovid/"}},l={},d=[];function h(e){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("h1",{children:"Agile Vs Open-Source"}),"\n",(0,t.jsx)("em",{children:"These slides are from a talk I gave to Simply Business about Risk-First"}),"\n",(0,t.jsxs)("div",{class:"slides",children:[(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.001.jpg",alt:"Image of slide number 1"})}),(0,t.jsx)("div",{class:"slide-notes",children:(0,t.jsx)("p",{children:"So, for this talk, I am going to talk about Risk-First, the passion I have for Open-Source and also about my current job, which I\u2019ve had for just over a month."})})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.002.jpg",alt:"Image of slide number 2"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So-we\u2019ve looked at Feedback Loops in detail, and I talked about how Scrum was just the formalisation of a few well-chosen feedback loops, out of the many available to software developers.   "}),(0,t.jsx)("p",{children:"The Agile movement, of which Scrum is a part, really started about 20 years ago, and has been phenomenally successful in selling the idea of these feedback loops."}),(0,t.jsx)("p",{children:"There are Scrum certification courses, and badges, and certificates, and consultancy and all kinds of things."}),(0,t.jsx)("p",{children:"This is so super-successful that inevitably, there is a lot of push back now.  "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.003.jpg",alt:"Image of slide number 3"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"It\u2019s not just people on the edge of the Agile community pushing back either.  Ron Jeffries and Martin Fowler were a couple of the original signatories of the Agile Manifesto. "}),(0,t.jsx)("p",{children:"And, here are some articles where they complain about the way agile is going."}),(0,t.jsx)("p",{children:"In a large part, they are responsible for the fact that Agile is so outrageously successful.  But, they\u2019re not happy.  They don\u2019t like the way that Agile has been commercialised, and turned into exactly the kind of process that Agile was really rejecting in the first place."}),(0,t.jsx)("p",{children:"So, it feels like Agile is falling out of favour.. especially with these guys."}),(0,t.jsx)("p",{children:"But I have a different take on why this might be."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.004.jpg",alt:"Image of slide number 4"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"When Kent Beck and Ron Jeffries and Martin Fowler got together to write the agile manifesto, the software landscape was very different than today."}),(0,t.jsx)("p",{children:"JUnit was a really early open-source library!  You could use Tomcat or Apache\u2026 or, maybe that was about it."}),(0,t.jsx)("p",{children:"The landscape has changed. "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.005.jpg",alt:"Image of slide number 5"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"What\u2019s getting harder and harder now, is figuring out which tools to use.  Not just methodologies, or practices, like we\u2019ve looked at today, but tools of all kinds. "}),(0,t.jsx)("p",{children:"Because there are so many languages, so many libraries.   A lot of them are really good."}),(0,t.jsx)("p",{children:"It\u2019s easy for me to stand here and say: use the libraries or tools or languages that help you address the most risk.  This seems like the underlying physics of software development.  Using a practice like \u201cAgile Software Development\u201d is really just one technique amongst many in addressing risk. "}),(0,t.jsx)("p",{children:"But what\u2019s a much harder problem now is curation.  How do I figure out which tool or library or practice to use?   How do I know it\u2019ll solve my problems?  "}),(0,t.jsx)("p",{children:"It would be strange if Agile, a practice invented 20 years ago for an entirely different risk landscape, was still perfectly suited to a completely different landscape today."}),(0,t.jsx)("p",{children:"And, I contend that the main reason the software landscape is so different today is because of Open Source - and I\u2019ll try and persuade you of this."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.006.jpg",alt:"Image of slide number 6"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, what risks does Agile address?  Risks like Schedule slippage, cancellation and the business changing their minds - they\u2019re all addressed by having short release cycles.  Get code into production quickly so that it starts paying its way."}),(0,t.jsx)("p",{children:"Doing lots of releases could impact quality, and cause outages, so we bring in practices like automated testing and refactoring.  The on-site customer (from XP) and the Sprint Review are there to catch misunderstood requirements."}),(0,t.jsx)("p",{children:"We already talked about how Key-Person risk is addressed by Pair Programming and Collective Code Ownership. "}),(0,t.jsx)("p",{children:"So this slide summarizes that - these are the risks addressed by XP, and the practices used to do it."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.007.jpg",alt:"Image of slide number 7"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"But, are these Risks the biggest risks anymore?  "}),(0,t.jsx)("p",{children:"If you\u2019re building software in the Open-Source world, then probably what you want to do is put together a system based on six or seven key dependencies.  "}),(0,t.jsx)("p",{children:"For example, if I was building a twitter-based website for printing T-Shirts, I might use some twitter APIs, some OAuth2 login piece, an API for getting the T-Shirts printed, and some kind of payments API like Stripe.  "}),(0,t.jsx)("p",{children:"One really key risk then for me is what I call Lock-In Risk:  can I get all those dependencies to behave together in a cohesive manner.  What happens when the dependencies change?   Will they all co-operate in the way I want.  "}),(0,t.jsx)("p",{children:"If some of my libraries are written in Java, and some in C++, will I be in the situation above where I\u2019m trying to join Lego with those sticklebrick things on the left?  "}),(0,t.jsx)("p",{children:"There are various tools out there to help you with this exact problem: things like Kubernetes, Docker or running other languages on the JVM, for example\u2026 but those are not things Agile really cares about."}),(0,t.jsx)("p",{children:"One tennet of Agile development is do \u201cthe simplest thing that could possibly work\u201d."}),(0,t.jsx)("p",{children:"But is that going to lead you into this Lock-In Risk problem?  Are you going to try to combine things that just don\u2019t work together?"}),(0,t.jsx)("p",{children:"This goes back to that whole \u201cMeta-Game\u201d idea that I was talking about earlier."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.008.jpg",alt:"Image of slide number 8"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Working in IT is really interesting.  Every day is Christmas Eve.  There are always new technologies to play with, new ideas to look at new practices to try.  This is one of the reasons why it\u2019s such a fun, crazy career to work in."}),(0,t.jsx)("p",{children:"But it\u2019s easy to get caught up in hype.  "}),(0,t.jsx)("p",{children:"Blockchain, "}),(0,t.jsx)("p",{children:"AI, "}),(0,t.jsx)("p",{children:"Big Data."}),(0,t.jsx)("p",{children:"There\u2019s always a new Javascript framework!"})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.009.jpg",alt:"Image of slide number 9"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So this Lock-In Risk problem is getting worse over time.  Every day there are more and more Open Source libraries to choose from.  No one has time to evaluate even a tiny fraction of them."}),(0,t.jsx)("p",{children:"I call this the \u201cBroccoli Problem\u201d.  To start with, on the left, we had computers, which did.. well, computing. "}),(0,t.jsx)("p",{children:"But now, on the right, we have an explosion of different libraries and products which cater to more and more specific use-cases."}),(0,t.jsx)("p",{children:"And, in the end you end up with NPM."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.010.jpg",alt:"Image of slide number 10"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"NPM is the Javascript package manager. It\u2019s a list of all the Open Source Javascript Libraries. And it has been going now since 2009 and as of 2022 there are nearly 2 million packages in there.   And the number of downloads is just\u2026 staggering."}),(0,t.jsx)("p",{children:"This is the broccoli problem - how the hell do I find the stuff I want or need in this lot?"}),(0,t.jsx)("p",{children:"And, this is something that Agile doesn\u2019t talk about - it\u2019s just not on the Agile radar."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.011.jpg",alt:"Image of slide number 11"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So Veracode, who make money doing source-code security scanning came out with this statistic in 2018:  95% of all IT organisations rely on Open Source.  But personally based on that slide with things like Linux, Java and so on, I feel it\u2019s probably going to be higher.  Maybe there are a few windows- or mac-only IT organisations out there\u2026 but in any case MacOS is based on Open Source GNU/Linux code."}),(0,t.jsx)("p",{children:"But this brings us onto a second problem, also not addressed by Agile."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.012.jpg",alt:"Image of slide number 12"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Another problem with building software out of a collection of dependencies is security risk.  "}),(0,t.jsx)("p",{children:"The log4shell exploit is a recent example of a hugely widely-used piece of open-source software (in this case, Log4j) containing a vulnerability that could then be exploited in any of the systems using it."}),(0,t.jsx)("p",{children:"Again, Agile doesn\u2019t have anything specific to say about this Risk.  Unless the product owner is on top of the Security Risks, there\u2019s no reason to think they\u2019ll get prioritised in a Sprint."}),(0,t.jsx)("p",{children:"Really, DevOps has come along to try and plug that gap."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.013.jpg",alt:"Image of slide number 13"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, going back to that Veracode statement, and the rise of Open Source over the last 20 years, the change we\u2019ve seen since the Agile movement started.. how has this happened?"}),(0,t.jsx)("p",{children:"You might look at Veracode\u2019s statement, and say, this is because Open-Source software is free.  And, that\u2019s certainly a part of it.  Free is always popular!"}),(0,t.jsx)("p",{children:"But I would say, a bigger part is because Open Source can be fit together in new ways, and you can build bigger and bigger things with it.  Just like the lego on the right."}),(0,t.jsx)("p",{children:"For me, proprietary software is like those lego bricks on the left:  you can put them at the top of a big pyramid of open-source, and sell it, but you can\u2019t extend it.   It\u2019s not allowed by the license."}),(0,t.jsx)("p",{children:"And, this means that the life of Open software is going to be longer than proprietary software.  But, you might not make so much money on it.  "}),(0,t.jsx)("p",{children:"Here\u2019s why."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.014.jpg",alt:"Image of slide number 14"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"For software to survive, it needs to evolve and change.  And for that to happen, it needs developers.  "}),(0,t.jsx)("p",{children:"So, let\u2019s look at the feedback loops.  "}),(0,t.jsx)("p",{children:"With proprietary software, you have customers, who give you money.  They pay for developer effort, and you get new releases.  Then, hopefully you get more new customers and more money, and the cycle continues."}),(0,t.jsx)("p",{children:"With open source software, it\u2019s all started with dependencies.  People pick up and use the software, and come to rely on it.  They then have problems with it, or new features they want to add.  "}),(0,t.jsx)("p",{children:"This hopefully means that developers come along and fix those issues, and that means Pull Requests and New Releases.  "}),(0,t.jsx)("p",{children:"So the lifecycle on the left is sustained by money, whereas the lifecycle on the right is dependencies."}),(0,t.jsx)("p",{children:"Because there are these two distinct types of feedback loops, you get two distinct types of software.  On the left are things like Google or Facebook - totally proprietary, making lots of money.  On the right, lots of languages like Java and Python are here - it\u2019s all about the network effect, and building ecosystems."}),(0,t.jsx)("p",{children:"Somewhere in the middle, you might have Amazon, who open all their APIs but make lots of money along the way by selling the compute time of using those APIs.  And being a shop."}),(0,t.jsx)("p",{children:"But, the problem with this is that developers need to eat, so somehow, money has to be involved in the feedback loop on the right."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.015.jpg",alt:"Image of slide number 15"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"But there\u2019s a big problem with that Open Feedback loop.  Because it doesn\u2019t properly involve money, it\u2019s not well-funded.   So, there\u2019s a big worry in Open Source which is nicely explained by this XKCD comic.  The worry is Agency Risk - that you have some dependency on a piece of software that is maintained invisibly by some critical person.  "}),(0,t.jsx)("p",{children:"A lot of Open Source is funded by that guy in Nebraska.  It\u2019s a personal project, done for the love of it, or through personal necessity.  The problem with that is the Agency Risk - by depending on this piece of software -no matter how good it is- you are also depending on the team maintaining it, to a certain extent."}),(0,t.jsx)("p",{children:"If there were more money in the system, there might be a bigger team of people involved in that one supporting project."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.016.jpg",alt:"Image of slide number 16"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, I\u2019ve worked in banking for nearly all of my career.  And nearly all the software I\u2019ve written in that time has been proprietary.  But, I\u2019ve consumed a lot of Open Source along the way."}),(0,t.jsx)("p",{children:"So, the last thing I want to talk about with respect to open source is a problem that a lot of us working in financial services have faced.  "}),(0,t.jsx)("p",{children:"That is, on the one hand, we are massive consumers of open source software, but on the other, we have been prevented from contributing back. "}),(0,t.jsx)("p",{children:"We\u2019re making that Nebraska problem worse."}),(0,t.jsx)("p",{children:"Why is that?"}),(0,t.jsx)("p",{children:"And, I think the reasoning goes like this:"})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.017.jpg",alt:"Image of slide number 17"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Back when I started my career, this was how my employers thought: "}),(0,t.jsx)("p",{children:"\u201cOur systems are our secret sauce\u2026 their code is the one unique thing about our bank, and can\u2019t be allowed to leave\u201d"}),(0,t.jsx)("p",{children:"This thinking has meant that, by-and-large, people working in Financial institutions are not contributing to Open Source as part of their jobs.  "}),(0,t.jsx)("p",{children:"Which I find really weird.  Because look at where banks are."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.018.jpg",alt:"Image of slide number 18"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"This is a picture of Canary Wharf in London.  But there are lots of other financial centres around the world.  That is, places where all the banks cluster together geographically."}),(0,t.jsx)("p",{children:"The main reason for wanting to do this is that from a labour point of view, bank workers know where to live.  And changing jobs means going to work next door. "}),(0,t.jsx)("p",{children:"But that means it\u2019s very easy for ideas to transmit between these organisations.  That is you are creating a collective \u201cInternal Model\u201d for all banks, not just building one bank\u2019s model in isolation."}),(0,t.jsx)("p",{children:"So, what sense does it make to prevent software from crossing the street too?  "}),(0,t.jsx)("p",{children:"And, yeah, attitudes are changing."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.019.jpg",alt:"Image of slide number 19"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"To Something like this:"}),(0,t.jsx)("p",{children:"\u201cOk. Maybe not all systems.  "}),(0,t.jsx)("p",{children:"Most of our code is just a poorly-implemented, in-house version of something that exists already.  "}),(0,t.jsx)("p",{children:"\u201cNot maintaining that code would be a cost-saving opportunity\u201d"}),(0,t.jsx)("p",{children:"So instead of developers trying to build something that\u2019s the best-in-the-bank, they can focus on building the best-in-the industry.  And everyone wins."}),(0,t.jsx)("p",{children:"Because by and large, the vast majority of software in banks is not doing anything that cool.  "}),(0,t.jsx)("p",{children:"And there\u2019s another angle to this too:"})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.020.jpg",alt:"Image of slide number 20"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"\u201cAny time we create a proprietary version of something it eventually ends up getting left behind by its original developers who move on."}),(0,t.jsx)("p",{children:"\u201cAlso, Open Source is cool, and makes us look good\u201d"}),(0,t.jsx)("p",{children:"So, we\u2019ve gone from the idea that sharing code is a negative, to the idea that it\u2019ll save money then to the idea that actually there are positive benefits to it too.  "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.021.jpg",alt:"Image of slide number 21"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"And, it\u2019s with that change-of-heart that Deutsche Bank allowed me to Open-Source this project, which is a library I built while at DB."}),(0,t.jsx)("p",{children:"It\u2019s a library to help developers build chat-bots for the Symphony and Microsoft Teams platforms."}),(0,t.jsx)("p",{children:"Now, I could have built this in-house for Deutsche Bank.  But I left DB in November and even though I\u2019m in contact with the bot-building team there, it\u2019s not completely clear that they have anyone to maintain this going forward."}),(0,t.jsx)("p",{children:"If this had been in-house software, it would probably be left to rot.  "}),(0,t.jsx)("p",{children:"However, I knew that my career at least was likely to further involve chat-bot development.   "}),(0,t.jsx)("p",{children:"So, by Open-Sourcing this software, I am selfishly providing something that I will be able to keep using in the future."}),(0,t.jsx)("p",{children:"But also, there may be a further life ahead of this project, which I\u2019ll explain soon."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.022.jpg",alt:"Image of slide number 22"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So the next level thinking is:"}),(0,t.jsx)("p",{children:"\u201cProprietary software always goes stale"}),(0,t.jsx)("p",{children:"If we are driving the open-source implementations that other organisations use, we\u2019ll have a competitive advantage\u201d"}),(0,t.jsx)("p",{children:"If you build these kind of lego bricks, people can build on top of them, and they get looked after and maintained."}),(0,t.jsx)("p",{children:"So this frame of mind is where financial institutions are going.  And some are already there.  As an example of what this means, let\u2019s look at Google, who execute this to perfection"})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.023.jpg",alt:"Image of slide number 23"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"First, Google makes money by selling ads, whether search ads or YouTube.  "}),(0,t.jsx)("p",{children:"So, to make it as easy as possible for people to see those ads, they created a free browser called Google Chrome, which is built on top of an open-source browser implementation that they created called Chromium."}),(0,t.jsx)("p",{children:"This ensures that no-one really makes money from browsers.  This strategy is called \u201ccommoditising your complement\u201d - it\u2019s the same thing that Microsoft did with PCs.  They sold more copies of Windows when PCs were a commodity."}),(0,t.jsx)("p",{children:"Second, the more mobile phones there are in the world, the more YouTube ads get seen.  So it makes perfect sense for Google to also have a commodity OS, like Android. "}),(0,t.jsx)("p",{children:"Third, they compete with Amazon\u2019s AWS with their GCP - Google Cloud Platform.  Now, Google are late entrants to this game, but it\u2019s a really lucrative game. The only way they would be able to persuade developers to use their stack over Amazon\u2019s was to offer something Amazon didn\u2019t.  Kubernetes is kind of like an Operating System for the data centre.  Again, it\u2019s Open Source and this means that people are building other tools on top of it."}),(0,t.jsx)("p",{children:"The hope is therefore that Kubernetes will Evolve faster that AWS, because of the Open Source feedback loop."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.024.jpg",alt:"Image of slide number 24"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Now, there is a problem with this for banks.  To a greater extent, Google \u201cown\u201d all of those things - Android, Chrome, Kubernetes, even though they\u2019re open-source."}),(0,t.jsx)("p",{children:"But this is a huge problem for banks!"}),(0,t.jsx)("p",{children:"Going back to Spring Bot, is it likely that other banks are going to contribute to a project that is owned by Deutsche Bank?  "}),(0,t.jsx)("p",{children:"So this is where FINOS comes in, who are my new employer.  They are custodians of financial Open-Source projects, providing a level playing field for all of the contributors."}),(0,t.jsx)("p",{children:"So I got my Spring Bot project donated to FINOS, in the hope that other banks would help maintain it.  Now, that\u2019s not happening yet, with Spring Bot, but there are other projects that FINOS has that banks are collaborating on, so maybe it\u2019s just a matter of time."}),(0,t.jsx)("p",{children:"But the dream for me and FINOS is that developers in banks won\u2019t just be writing proprietary bank software, but writing open source software for their bank and getting paid for it.   This is what I was doing with Spring Bot, but it seems like lots of other projects really would work better the same way."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.025.jpg",alt:"Image of slide number 25"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, let\u2019s summarize.  Why would doing more Open Source be good for Financial Institutions?"}),(0,t.jsx)("p",{children:"First, at the moment, we\u2019re are duplicating a lot.  For example - regulatory code gets written by every bank.  But there are projects in the OpenRegTech space starting now which aim to provide Open Source implementations of Regulation across institutions.  This is going to share the costs."}),(0,t.jsx)("p",{children:"Second, if there are fewer implementations, it means more users of each one.  Linus Torvalds famously said \u201cGiven enough eyeballs, all bugs are shallow.\u201d So more users means fewer bugs.  "}),(0,t.jsx)("p",{children:"Third, as we talked about above, the feedback loop of Open Source means that it builds on itself.  Open Source code survives individual organisations or teams failing."}),(0,t.jsx)("p",{children:"Fourth, we\u2019re tackling that Nebraska developer problem:  hopefully, we\u2019re moving to a \u201cCorporate Open Source\u201d world, where there is funding for critical pieces of infrastructure."}),(0,t.jsx)("p",{children:"And finally, (and this is kind of happening anyway) industry is waking up to the fact that, while Open Source is currently a free lunch there are downsides. So, they need to start worrying about things like security."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.026.jpg",alt:"Image of slide number 26"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, the place I see organisations like FINOS or the Linux Foundation helping are to provide a level playing field, where financial institutions can cooperate on this stuff.  "}),(0,t.jsx)("p",{children:"Not only that, but we\u2019ve got to make it much, much easier for people in large corporations to get involved with this stuff, instead of getting bogged down in the bureaucracy and paperwork, which I think is the stage we\u2019re currently in."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/AgileVsOpenSource/images/images.027.jpg",alt:"Image of slide number 27"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, to summarise then, I think Agile has its place.  It\u2019s about testing ideas fast and finding a solution.   We will always need to do that."}),(0,t.jsx)("p",{children:"But at the same time, we need to get to a place where the components we use to build our software are professionally constructed,  maintained and curated.  And not just the work of some guy in Nebraska.  "}),(0,t.jsx)("p",{children:"And to get there, we need Open Source to be more people\u2019s jobs."}),(0,t.jsx)("p",{children:"That\u2019s the hope.  If you\u2019d asked me 10 years ago whether that was achievable, I would have said no.  Now however, I\u2019m not so sure - I see signs we\u2019re headed in that direction, which I\u2019m rea"})]})]})]}),"\n",(0,t.jsxs)("p",{class:"credits",children:["Made with ",(0,t.jsx)("a",{href:"https://keynote-extractor.com",children:"Keynote Extractor"}),"."]})]})}function c(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h()}},28453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>r});var t=i(96540);const o={},n=t.createContext(o);function a(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);