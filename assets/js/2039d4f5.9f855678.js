"use strict";(self.webpackChunkrf_website=self.webpackChunkrf_website||[]).push([[6422],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var s=n(96540);const o={},a=s.createContext(o);function i(e){const t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:t},e.children)}},47356:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"methods/Extreme-Programming","title":"Extreme Programming","description":"An Agile software development methodology that emphasizes customer satisfaction, teamwork, and frequent delivery of small, functional software increments.","source":"@site/docs/methods/Extreme-Programming.md","sourceDirName":"methods","slug":"/methods/Extreme-Programming","permalink":"/methods/Extreme-Programming","draft":false,"unlisted":false,"editUrl":"https://github.com/risk-first/website/blob/master/docs/methods/Extreme-Programming.md","tags":[{"inline":false,"label":"Method","permalink":"/tags/Method"},{"inline":false,"label":"Agile","permalink":"/tags/Agile"},{"inline":false,"label":"Extreme Programming","permalink":"/tags/Extreme-Programming"}],"version":"current","frontMatter":{"title":"Extreme Programming","description":"An Agile software development methodology that emphasizes customer satisfaction, teamwork, and frequent delivery of small, functional software increments.","tags":["Method","Agile","Extreme Programming"],"featured":{"class":"c","element":"<image-artifact imgsrc=\\"/public/templates/risk-first/posts/xp.svg\\">XP</image-artifact>"},"method":{"practices":[{"tag":"Pair Programming","reason":"XP encourages two developers working together at one workstation, which improves code quality and facilitates knowledge sharing.","use":["Collective Code Ownership"]},{"tag":"Automated Testing","reason":"XP emphasizes writing tests before coding, ensuring that the software meets its requirements from the start.","use":["Test Driven Development (TDD)","Unit Testing"]},{"tag":"Integration Testing","reason":"XP practices include integrating code into a shared repository frequently, which helps in identifying integration issues early.","use":["Continuous Integration"]},{"tag":"Refactoring","reason":"XP encourages continuous refactoring to improve the design of existing code and maintain its quality."},{"tag":"Coding","reason":"Coding is a core activity in XP, with an emphasis on clear, simple code."},{"tag":"Release Delivery","reason":"XP focuses on frequent, small releases to ensure the software is always in a shippable state."},{"tag":"Stakeholder Management","reason":"XP involves customers directly in the development process to ensure the software meets their needs.","use":["Customer Involvement","On-Site Customer"]},{"tag":"Retrospectives","reason":"XP relies on continuous feedback from tests, customers, and developers to improve the software.","use":["Continuous Feedback"]},{"tag":"Automation","reason":"XP emphasizes the use of automated tests to ensure the software works as expected.","use":["Automated Testing"]},{"tag":"Documentation","reason":"XP values communication, which can include necessary documentation, but prioritizes working software and direct communication."},{"tag":"Requirements Capture","reason":"XP captures requirements through user stories and continuous dialogue with the customer.","use":["User Stories"]},{"tag":"Debugging","reason":"Debugging is an essential part of the development process in XP."},{"tag":"Estimating","reason":"XP uses practices like planning games to estimate the time and resources needed for tasks.","use":["Planning Game"]},{"tag":"Monitoring","reason":"Monitoring progress through daily stand-ups and frequent releases is integral to XP.","use":["Daily Stand-ups"]},{"tag":"Version Control","reason":"Version control is a best practice in software development, including in XP."},{"tag":"Tool Adoption","reason":"XP teams often adopt specific tools to manage the backlog, tests, and collaboration.","use":["Coding Standards"]},{"tag":"Training","reason":"XP teams engage in continuous learning and improvement, often through practices like pair programming."},{"tag":"Performance Testing","reason":"Ensuring the software performs well under expected workloads is a practice within XP."},{"tag":"Review","reason":"XP includes regular reviews to assess progress and make necessary adjustments."},{"tag":"Approvals","reason":"XP involves customer approval during frequent releases and continuous customer involvement."},{"tag":"Configuration Management","reason":"Configuration management helps maintain the consistency of the product\'s performance in XP."},{"tag":"Design","reason":"XP Emphasizes the simplest design that works, avoiding unnecessary complexity.","use":["Simple Design","Metaphor"]}]}},"sidebar":"tutorialSidebar","previous":{"title":"DevOps","permalink":"/methods/DevOps"},"next":{"title":"Lean Software Development","permalink":"/methods/Lean"}}');var o=n(74848),a=n(28453);const i={title:"Extreme Programming",description:"An Agile software development methodology that emphasizes customer satisfaction, teamwork, and frequent delivery of small, functional software increments.",tags:["Method","Agile","Extreme Programming"],featured:{class:"c",element:'<image-artifact imgsrc="/public/templates/risk-first/posts/xp.svg">XP</image-artifact>'},method:{practices:[{tag:"Pair Programming",reason:"XP encourages two developers working together at one workstation, which improves code quality and facilitates knowledge sharing.",use:["Collective Code Ownership"]},{tag:"Automated Testing",reason:"XP emphasizes writing tests before coding, ensuring that the software meets its requirements from the start.",use:["Test Driven Development (TDD)","Unit Testing"]},{tag:"Integration Testing",reason:"XP practices include integrating code into a shared repository frequently, which helps in identifying integration issues early.",use:["Continuous Integration"]},{tag:"Refactoring",reason:"XP encourages continuous refactoring to improve the design of existing code and maintain its quality."},{tag:"Coding",reason:"Coding is a core activity in XP, with an emphasis on clear, simple code."},{tag:"Release Delivery",reason:"XP focuses on frequent, small releases to ensure the software is always in a shippable state."},{tag:"Stakeholder Management",reason:"XP involves customers directly in the development process to ensure the software meets their needs.",use:["Customer Involvement","On-Site Customer"]},{tag:"Retrospectives",reason:"XP relies on continuous feedback from tests, customers, and developers to improve the software.",use:["Continuous Feedback"]},{tag:"Automation",reason:"XP emphasizes the use of automated tests to ensure the software works as expected.",use:["Automated Testing"]},{tag:"Documentation",reason:"XP values communication, which can include necessary documentation, but prioritizes working software and direct communication."},{tag:"Requirements Capture",reason:"XP captures requirements through user stories and continuous dialogue with the customer.",use:["User Stories"]},{tag:"Debugging",reason:"Debugging is an essential part of the development process in XP."},{tag:"Estimating",reason:"XP uses practices like planning games to estimate the time and resources needed for tasks.",use:["Planning Game"]},{tag:"Monitoring",reason:"Monitoring progress through daily stand-ups and frequent releases is integral to XP.",use:["Daily Stand-ups"]},{tag:"Version Control",reason:"Version control is a best practice in software development, including in XP."},{tag:"Tool Adoption",reason:"XP teams often adopt specific tools to manage the backlog, tests, and collaboration.",use:["Coding Standards"]},{tag:"Training",reason:"XP teams engage in continuous learning and improvement, often through practices like pair programming."},{tag:"Performance Testing",reason:"Ensuring the software performs well under expected workloads is a practice within XP."},{tag:"Review",reason:"XP includes regular reviews to assess progress and make necessary adjustments."},{tag:"Approvals",reason:"XP involves customer approval during frequent releases and continuous customer involvement."},{tag:"Configuration Management",reason:"Configuration management helps maintain the consistency of the product's performance in XP."},{tag:"Design",reason:"XP Emphasizes the simplest design that works, avoiding unnecessary complexity.",use:["Simple Design","Metaphor"]}]}},r=void 0,m={},c=[{value:"Description",id:"description",level:2},{value:"See Also",id:"see-also",level:2}];function g(e){const t={a:"a",blockquote:"blockquote",em:"em",h2:"h2",p:"p",...(0,a.R)(),...e.components},{MethodIntro:n,TagList:s}=t;return n||u("MethodIntro",!0),s||u("TagList",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n,{details:i}),"\n",(0,o.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["\"Extreme Programming (XP) is a software development methodology which is intended to improve software quality and responsiveness to changing customer requirements. As a type of agile software development, it advocates frequent 'releases' in short development cycles, which improves productivity and introduces checkpoints at which new customer requirements can be adopted.\" - ",(0,o.jsxs)(t.a,{href:"https://en.wikipedia.org/wiki/Extreme_programming",children:["Extreme Programming, ",(0,o.jsx)(t.em,{children:"Wikipedia"})]})]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Extreme Programming (XP) is an Agile framework that emphasizes customer satisfaction, teamwork, and frequent delivery of small, functional software increments. Key practices in XP include pair programming, test-driven development, continuous integration, refactoring, and simple design. XP focuses on improving software quality and responding to changing customer requirements through frequent releases and continuous feedback."}),"\n",(0,o.jsx)(t.p,{children:"In addition to the practices described above, XP promotes a sustainable work pace to avoid burnout, encouraging a maximum of 40-hour work weeks and avoiding overtime as much as possible."}),"\n",(0,o.jsx)(t.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsx)(s,{tag:"XP"})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);