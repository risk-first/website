"use strict";(self.webpackChunkrf_website=self.webpackChunkrf_website||[]).push([[8728],{85865:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>r,toc:()=>d});var t=i(74848),a=i(28453);const n={template:"post",title:"The Agile Onion",description:"Light-hearted presentation for Deutsche Bank on Risk-First and Agile, June 2019.",author:"rob",featured:{class:"bg1",element:'<image-artifact imgsrc="/public/templates/risk-first/posts/onion.svg">The Agile Onion</image-artifact>'},date:"2019-07-24 16:32:03 +0000",tags:["Presentations"],sidebar_position:6,hide_table_of_contents:!0},o=void 0,r={id:"presentations/onion/index",title:"The Agile Onion",description:"Light-hearted presentation for Deutsche Bank on Risk-First and Agile, June 2019.",source:"@site/docs/presentations/onion/index.md",sourceDirName:"presentations/onion",slug:"/presentations/onion/",permalink:"/presentations/onion/",draft:!1,unlisted:!1,editUrl:"https://github.com/risk-first/website/blob/master/docs/presentations/onion/index.md",tags:[{inline:!1,label:"Presentations",permalink:"/tags/Presentations"}],version:"current",sidebarPosition:6,frontMatter:{template:"post",title:"The Agile Onion",description:"Light-hearted presentation for Deutsche Bank on Risk-First and Agile, June 2019.",author:"rob",featured:{class:"bg1",element:'<image-artifact imgsrc="/public/templates/risk-first/posts/onion.svg">The Agile Onion</image-artifact>'},date:"2019-07-24 16:32:03 +0000",tags:["Presentations"],sidebar_position:6,hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"COVID, Agile, ChatOps",permalink:"/presentations/BotsChatOpsCovid/"},next:{title:"All In On Open Source",permalink:"/presentations/OpenSource/"}},l={},d=[];function h(e){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("h1",{children:"The Agile Onion"}),"\n",(0,t.jsx)("i",{children:'These slides and text are based on notes I made for a presentation at Deutsche Bank\'s "Agile Month", covering Risk-First and Agile. Delivered in June 2019.'}),"\n",(0,t.jsxs)("div",{class:"slides",children:[(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.001.jpg",alt:"Image of slide number 1"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"My name is Rob Moffat.  I am a Java and Javascript software developer working in London.  "}),(0,t.jsx)("p",{children:"So, the reason this talk is called \u201cPeeling The Agile Onion\u201d is because I really want to do is get at the heart of what makes agile work.  "}),(0,t.jsx)("p",{children:"Hopefully this won\u2019t be an onion that makes us cry.  We\u2019ll see."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.002.jpg",alt:"Image of slide number 2"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, what am I going to talk about today.   "}),(0,t.jsx)("p",{children:"I\u2019ve been working in banking for nearly 20 years, and so really, I thought it would be interesting to look at couple of things:"}),(0,t.jsx)("p",{children:"One, I want to look at a \u201cpersonal\u201d history of agile - how it\u2019s affected me, and what I\u2019ve learned in those 20-odd years.  "}),(0,t.jsx)("p",{children:"I also want to look at the history of Agile within, really, the banking industry, and also look at where that\u2019s going, and how we can expect it to develop."}),(0,t.jsx)("p",{children:"But beware: this is all a personal viewpoint, and as we know, those are all flawed in some way.  "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.003.jpg",alt:"Image of slide number 3"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Now, a third element to what I\u2019m going to cover in my talk is an introduction to Risk-First.  "}),(0,t.jsx)("p",{children:"This is a website, which you can go and check out after the presentation.  I\u2019m going to introduce a few of the concepts from Risk-First today."}),(0,t.jsx)("p",{children:"Because I really want to explore in this talk the dynamics of Agile.  That is, try to understand the forces that get us to where we are, and where we\u2019re going.  What\u2019s working, and what isn\u2019t. And Risk-First happens to be a fairly useful way to frame that, so I am going to make use of it a bit. "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.004.jpg",alt:"Image of slide number 4"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:" Ok, let\u2019s start at the start.  My first job in finance was at Deutsche Bank (this is a picture of their main London office, on London Wall)."}),(0,t.jsx)("p",{children:"I actually worked here from about 2002 - 2005.  Which is a really long time ago.  Amazingly, some of the software I wrote then is still running in the bank, somewhere."}),(0,t.jsx)("p",{children:"So actually DB is when I first learnt about \u201cAgile\u201d as a thing.  The system I built had a suite of automated tests.  We released every couple of weeks.  We met with our users every couple of weeks, we prioritised work."}),(0,t.jsx)("p",{children:"Also, more because of when it was being done, we didn\u2019t have a project plan, or a release date, or a signed off specification.  Because back in 2002, that was just the way we rolled building banking IT!   In a way, this was \u201cAccidentally Agile\u201d."}),(0,t.jsx)("p",{children:"You could just log into production systems and change things.  Root access on machines and databases.  And so on.  I personally managed to fry one of our production databases once.  "}),(0,t.jsx)("p",{children:"So, actually, there was a lot of what we call \u201cOperational Risk\u201d back then.  Individuals could either deliberately or accidentally mess things up really, really badly.  "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.005.jpg",alt:"Image of slide number 5"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Around 2005 Basel 2 was introduced, which actually addressed this Operational Risk in banks, and forced them to start doing something about it. "}),(0,t.jsx)("p",{children:"As you can see here in the diagram, Basel 2 addressed Operational Risks, Market Risks and Credit Risks, with new regulations for each.  Basel 1 had just been about those bottom two, so Operational Risk was a new concern.  "}),(0,t.jsx)("p",{children:"Audits started coming in, and break glass accounts, and change requests, and all this stuff.  "}),(0,t.jsx)("p",{children:"Which made it harder to do the wrong things, but also made it harder to do the right things."}),(0,t.jsx)("p",{children:'So, some of those "Accidentally-Agile" practices were going to get harder to do.  For good reason.  Having systems like that was just dangerous.'})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.006.jpg",alt:"Image of slide number 6"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Now, it turns out, bankers weren\u2019t the only people thinking about risk."}),(0,t.jsx)("p",{children:"The quote above is actually the first sentence from Chapter One of a fairly famous book on Software Development.  "}),(0,t.jsx)("p",{children:"Does anyone know which one?"})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.007.jpg",alt:"Image of slide number 7"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"It's this one.  This is the first Agile book I read, whilst at Deutsche Bank that first time. "}),(0,t.jsx)("p",{children:"This seemed like a breath of fresh air compared with what I\u2019d learnt at university about software development."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.008.jpg",alt:"Image of slide number 8"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Kent had a bunch of ideas in this book, that really deviated from the accepted \u201cnorms\u201d of software development, like Pair Programming."}),(0,t.jsx)("p",{children:"This is a picture of some guys Pair Programming."}),(0,t.jsx)("p",{children:"Some people love it.   A lot of developers grew to hate XP because of this.  They didn\u2019t want to share a keyboard and mouse with someone, and work together."}),(0,t.jsx)("p",{children:"But what is the point of Pair Programming?  "}),(0,t.jsx)("p",{children:"What Kent is trying to avoid by enforcing this is Key Person Risk.  That is, having individuals on a team who are the only people who know about a thing.  "}),(0,t.jsx)("p",{children:"And if they leave or go on holiday, your project is down the toilet.  "}),(0,t.jsx)("p",{children:"That\u2019s the idea, anyway:  Pair Programming is a risk-management technique.  Specifically, trying to address Key Person Risk."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.009.jpg",alt:"Image of slide number 9"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Kent Beck also co-invented JUnit.  As a Java developer, I use this all the time."}),(0,t.jsx)("p",{children:"I actually can't imagine coding now without building tests as I go, and having tools to at least understand my coverage..  It just seems so helpful now to have this."}),(0,t.jsx)("p",{children:"Now, why do we write tests?  Why are Unit tests such an integral part of Agile? "}),(0,t.jsx)("p",{children:"I would say, they are managing risk."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.010.jpg",alt:"Image of slide number 10"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"They are managing a couple of risks:  First, you want to test your code before you put it in production.  Putting untested code into production is an Operational Risk right there!"}),(0,t.jsx)("p",{children:"But also, there the threat of regression:  our code is going to change in the future, we want to change it, and if we have tests, we have some more certainty that when we do change it, we haven\u2019t introduced new bugs.  "}),(0,t.jsx)("p",{children:"And, it\u2019s a tradeoff - that\u2019s what\u2019s being shown here.  In order to address implementation risk, and operational risk, I have to own some extra code in my codebase.  So, that\u2019s complexity risk.  And building those tests, and maintaining them, that\u2019s going to take some of my schedule up, so there\u2019s a risk to the schedule in writing tests."}),(0,t.jsxs)("p",{children:["Now, if you\u2019re good at Unit Testing, this is a great deal. The trick is to write ",(0,t.jsx)("i",{children:"just enough"})," tests to address the risks on the left. But if you go crazy, you end up turning it into an industry, which blows up those risks on the right."]}),(0,t.jsx)("p",{children:"So, it\u2019s back to this again."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.011.jpg",alt:"Image of slide number 11"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"It seems weird that Kent started his book with this statement, but what people really remember about XP is just Pair Programming, Unit Tests and eating pizza."}),(0,t.jsx)("p",{children:"I think he was actually on to something really powerful right then and he didn't develop it further."}),(0,t.jsx)("p",{children:"The reason is, he had these other fish to fry:  he'd developed XP which, to him and many other people, was demonstrably better than the way we had been doing software development.  "}),(0,t.jsx)("p",{children:'And so his book was just a catalog of all these "better" techniques, and how they could be used together.   '})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.012.jpg",alt:"Image of slide number 12"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"These approaches are more popular than XP nowadays.  "}),(0,t.jsx)("p",{children:"Who uses Scrum at work? We\u2019re going to talk a bunch about how Scrum has been accepted in Software Development.  "}),(0,t.jsx)("p",{children:"Anyone use Lean or Kanban?  "}),(0,t.jsx)("p",{children:"Does anyone still use Waterfall?  "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.013.jpg",alt:"Image of slide number 13"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"I\u2019m not here to rag on Waterfall.  "}),(0,t.jsx)("p",{children:"Sometimes, Waterfall is the right way to go!  "}),(0,t.jsx)("p",{children:"We'll dive into that in more detail in a minute, but it feels like collectively, as an industry, or a practice, software development has been on a path of discovery."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.014.jpg",alt:"Image of slide number 14"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Waterfall leads to XP and Scrum and Lean and Kanban, lately DevOps and so on."}),(0,t.jsx)("p",{children:"Exactly as described in the Agile Manifesto."}),(0,t.jsx)("p",{children:"But, Banking in particular seems to lag on these trends.  Now, is there a reason why?"}),(0,t.jsx)("p",{children:"I think there is, and I\u2019m going to explain that."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.015.jpg",alt:"Image of slide number 15"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Who know\u2019s what this curve is?  "}),(0,t.jsx)("p",{children:"It\u2019s called a Hype Cycle.  "}),(0,t.jsx)("p",{children:"Basically in a Hype-Cycle we have early adopters of a new idea picking up on it on the left hand side, and using it, and reporting success.  And that leads to more awareness.  "}),(0,t.jsx)("p",{children:"And more people pile in, using that technology for things that are maybe, not exactly what it was intended for. (The Peter Principle)"}),(0,t.jsx)("p",{children:"And after a while, we end up in this \u201cPeak Of Inflated Expectations\u201d where everyone is raving about a thing, without necessarily knowing all that much about it.  So, like Bitcoin a year ago, or fidget spinners two years ago.  "}),(0,t.jsx)("p",{children:"Well anyway, it turns out that the more awareness increases beyond people\u2019s actual knowledge of a thing, the bigger the hype is, and then the worse this crash into the \u201cTrough of Disillusionment\u201d."}),(0,t.jsx)("p",{children:"Eventually, the knowledge of the thing increases in the population, and people pull out of the hype cycle into the slope of enlightenment and the plateau of productivity, because they know when something is useful, they\u2019re not just jumping on a bandwagon."}),(0,t.jsx)("p",{children:"They\u2019ve figured out what that thing is useful for, and what it\u2019s not for."}),(0,t.jsx)("p",{children:"So people like Kent Beck were the far-left adopters on this curve.  "}),(0,t.jsx)("p",{children:"So, I guess the question is, why has that taken so long in Banking?  Why weren\u2019t they earlier on on this adoption curve?"})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.016.jpg",alt:"Image of slide number 16"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"I think there are a few reasons.  "}),(0,t.jsx)("p",{children:"First, big organisations are always slower to adapt, and banks are large organisations.   This is often because the people in charge already have their ways of doing things.  It\u2019s taken 20 years - a whole generation - for those ideas to change.  "}),(0,t.jsx)("p",{children:"But I also suspect that it\u2019s partly to do with the 2007 Financial Crisis.  Certainly, in the risk departments I worked in, regulations started flying in from all directions.  "}),(0,t.jsx)("p",{children:"The regulations always had a delivery date, and they generally required coordination across a large number of very disparate groups of people."}),(0,t.jsx)("p",{children:"And, they were generally very clear in what they wanted to see."}),(0,t.jsx)("p",{children:"I personally felt for a long while that those kinds of projects didn\u2019t really lend themselves to an Agile approach.  "}),(0,t.jsx)("p",{children:"You were given a bunch of money, and told to make something happen across a large organisation, by a certain date."}),(0,t.jsx)("p",{children:"You couldn\u2019t put together a small team in a room, you couldn\u2019t apply a process of iterating in two weeks.   "}),(0,t.jsx)("p",{children:"So banking (and especially Risk, which I worked in) stuck with Waterfall for far longer than many other industries, I think."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.017.jpg",alt:"Image of slide number 17"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"OK, so all this talk of Financial Crises and Waterfall is a bit tedious.  Let\u2019s mix things up a bit and do a quick Risk-First introduction.  "}),(0,t.jsx)("p",{children:"When I was at school, I took Economics.  We were 17 or 18 years old.  And one of the guys just asks:"}),(0,t.jsx)("p",{children:"\"What's the point of all this?  Surely the markets are just people buying and selling stuff?  They don't know about demand curves and price elasticity and all of these things!\""}),(0,t.jsx)("p",{children:"My economics teacher had to take quite a lot of shit actually.  We were young and political and pretty annoying teenagers.  But he gave a great answer:"}),(0,t.jsx)("p",{children:"\"When footballers are playing a match of football, they have an understanding of how the ball works.  But they don't need to be good physicists.  Nevertheless, physical rules underpin the game they play.\u201d"})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsxs)("div",{class:"slide-image",children:[(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.018.jpg",alt:"Image of slide number 18"}),(0,t.jsxs)("small",{children:["From ",(0,t.jsx)("a",{href:"https://xkcd.com",children:"XKCD"})]})]}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:'Now, that might be overselling Economics, "the dismal science", as a discipline, comparing it to Physics.'}),(0,t.jsx)("p",{children:"It seems to me that Kent Beck understood that something similar was true in Software.  "}),(0,t.jsx)("p",{children:"Risk was that underlying physics of building software."}),(0,t.jsx)("p",{children:"I\u2019ve come to the same realisation, and I\u2019m going to spend a couple of minutes now trying to persuade you why that\u2019s true."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.019.jpg",alt:"Image of slide number 19"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"That is, methodologies like Scrum, XP, Waterfall are collections of practices like Unit Testing, Stand-Ups and so on. And these practices are meant to manage risk.  "}),(0,t.jsx)("p",{children:'Risk is the underlying "physics" that we\'re dealing with.  '}),(0,t.jsx)("p",{children:"And risks are all the things that can go wrong on your project, preventing you from hitting the goal, the vision of reality that you wanted."}),(0,t.jsx)("p",{children:"I am going to try and make that case in various ways, and then we can try to apply that principle in a number of different scenarios and see where it gets us."}),(0,t.jsx)("p",{children:"You could argue, like a footballer might, that understanding that lower level isn't going to make a jot of difference to how you do the higher level stuff.  How do you run a good retro?  How do you do estimating?  How do you code a feature?  "}),(0,t.jsx)("p",{children:"You can know all that stuff separately."}),(0,t.jsx)("p",{children:"Actually though, I think, like economics, not only that it is useful, but that we're already doing this stuff anyway, we just don't talk about it."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.020.jpg",alt:"Image of slide number 20"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, in order to convince you of this statement, I'm first going to try and convince you of some more specific statements.  "}),(0,t.jsx)("p",{children:"Let\u2019s start with.."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.021.jpg",alt:"Image of slide number 21"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So instead of looking at Software Development for a moment, I\u2019m just going to talk about the board game, Risk."}),(0,t.jsx)("p",{children:"My son Charlie and I love to play risk. "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.022.jpg",alt:"Image of slide number 22"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"This is actually the board from the last time we played.  He is Yellow and I am Grey. "}),(0,t.jsx)("p",{children:"If you understand the game risk, you'll know that basically, it's a regressive game. "}),(0,t.jsx)("p",{children:"The person winning has the most land, and they get the most troops.  "}),(0,t.jsx)("p",{children:"The only nod at progressive game play (that is, trying to even everyone out) is that attacking is harder than defending.  "}),(0,t.jsx)("p",{children:"In this game, I won on the next turn, because I could see Charlie's position was over-extended, and I had a bunch of cards and you get lots of troops for continents - I\u2019ve got 3.  North and South America, and Australasia.  "}),(0,t.jsx)("p",{children:"Why did I know I was going to win?  Basically, I have an Internal Model of Risk that's better than his.   I could see the danger areas.  For example, I knew that by holding Thailand down here, I would prevent him from owning Asia, which would gives him 7 extra troops each go.  And by defending Kamchatka up the top I can stop him marching into the US."}),(0,t.jsx)("p",{children:"But I'm taking risks too: Africa is a huge open back-door, and Charlie could have taken South America and beaten me.  "}),(0,t.jsx)("p",{children:"In the same way as banks have Operational Risk, and Market Risk and Credit Risk, I have Africa Risk, and a bit of Kamchatka Risk.  "}),(0,t.jsx)("p",{children:"That is, I can identify specific types of risk that\u2019ll cause me to lose the game."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.023.jpg",alt:"Image of slide number 23"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:'So, to win at risk, I was managing a balance of risks.  And those risks are the ones I know about, in my "Internal Model".   '}),(0,t.jsx)("p",{children:"It's possible that there are things that I'm not seeing, that a better Risk player would.  The reason I beat Charlie is I am 44 and my Internal Model is a bit better developed than his.  "}),(0,t.jsx)("p",{children:"And, I've played more Risk."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.024.jpg",alt:"Image of slide number 24"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Roulette is another game that's all about risk.  Generally, most people have the same internal model of this game:  If I put a chip down on number 12, I will get back 36 chips if it comes up.. but there are 37 slots on the wheel, because of the zero.   The bank always wins on that, and so it\u2019s everso slightly rigged against you. "}),(0,t.jsx)("p",{children:"So, overall, over time, I\u2019m going to lose."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.025.jpg",alt:"Image of slide number 25"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"But this guy, Joseph Jagger, made a ton of money in the 1880's out of Roulette because he had a better Internal Model.  He sent stooges to casinos to record the results of each spin of the wheel.  And he found that some wheels were biased and so certain numbers came up more often than others."}),(0,t.jsx)("p",{children:"All he had to do was bet on those numbers to win."}),(0,t.jsx)("p",{children:'And all he had to do to get this "improved" Internal Model, was to go out and experiment in the real world, and record some observations.  He had to do what I call "Meeting Reality".  '})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.026.jpg",alt:"Image of slide number 26"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, we all know feedback loops are important right?"}),(0,t.jsx)("p",{children:"I\u2019ve listed some here.  The \u201ctightest\u201d loops are at the top, the \u201clongest\u201d loops at the bottom.  But these top ones give you \u201cless\u201d than the bottom ones - the Reality you meet isn\u2019t the full, gory reality of those ones at the bottom."}),(0,t.jsx)("p",{children:"Just because your code compiles, doesn\u2019t mean people are going to enjoy using it."}),(0,t.jsx)("p",{children:"But, you can find that out in a few seconds."}),(0,t.jsx)("p",{children:"It might take weeks to get a feature request back from a user, or a bug report. "}),(0,t.jsx)("p",{children:'When you play the Risk game or learn about the Roulette wheels, you "Meet Reality\u201d - your Internal Model improves.  This is the general process whereby experience gives you a better understanding of the risks.  '}),(0,t.jsx)("p",{children:"Does that apply to software development?  "}),(0,t.jsx)("p",{children:"I would argue it does.  Going back to Charlie, we were doing some revision for his Computer Science exam the other day, and he had to understand HTML.  "}),(0,t.jsx)("p",{children:"He wrote a webpage that looked like this, to start with."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.027.jpg",alt:"Image of slide number 27"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Now, for most of us... this just hurts our eyes.   We can see all of the problems right off.  I have no idea what a browser would do with this.   Browsers are very lenient so maybe some of it would work."}),(0,t.jsx)("p",{children:"But the reason this sets off alarm bells for us, is that we have really well developed Internal Models of HTML and the rest.  "}),(0,t.jsx)("p",{children:"Whereas this is Charlie's first webpage."}),(0,t.jsx)("p",{children:"By loading this up in a browser, he is Meeting Reality.  He\u2019s closing a feedback loop, because he\u2019ll see the results of his efforts.  "}),(0,t.jsx)("p",{children:"And, his Internal Model will improve."}),(0,t.jsx)("p",{children:"The next time he writes a webpage, his Internal Model will warn him about the risks of it going wrong, and he\u2019ll make fewer mistakes."}),(0,t.jsx)("p",{children:"And that process of Meeting Reality, Improving Your Internal Model, and having tight feedback loops is the essential characteristic of Agile."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.028.jpg",alt:"Image of slide number 28"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So let's look again at Waterfall.  As I said earlier, a lot of the \u201cFinancial Crisis era\u201d regulation projects, we got through them with something like this:"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"Requirements Capture"}),(0,t.jsx)("li",{children:"Specification"}),(0,t.jsx)("li",{children:"Up-Front Plans and Budgets"})]}),(0,t.jsx)("p",{children:"Why these practices?"}),(0,t.jsx)("p",{children:"Because Waterfall methodologies are borrowed from the construction industry, they manage the risks that you would care about in a construction project, specifically, minimising the risk of rework, and the risk of costs spiralling during the physical phase of the project. "}),(0,t.jsx)("p",{children:"For example, pouring concrete is significantly easier than digging it out again after it sets."}),(0,t.jsx)("p",{children:"Construction projects are often done by tender which means that the supplier will bid for the job of completing the project, and deliver it to a fixed price. "}),(0,t.jsx)("p",{children:"This is a risk-management strategy for the client: they are transferring the risk of construction difficulties to the supplier, and avoiding the Agency Risk that the supplier will \u201cpad\u201d the project and take longer to implement it than necessary, charging them more in the process. "}),(0,t.jsx)("p",{children:"In order for this to work, both sides need to have a fairly close understanding of what will be delivered, and this is why a specification is created."}),(0,t.jsx)("p",{children:"In this diagram, the risks on the left are addressed by the actions on the right: requirements capture, specification, fixed price contracts.  That\u2019s why they have a bar through them.  "}),(0,t.jsx)("p",{children:"Those actions are doing something to address those risks."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.029.jpg",alt:"Image of slide number 29"})}),(0,t.jsx)("div",{class:"slide-notes",children:(0,t.jsx)("p",{children:"But, a lot of the time, waterfall was addressing the wrong risks."})})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.030.jpg",alt:"Image of slide number 30"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, here we have the full equation.  By taking these actions in the middle, we address the risks on the left."}),(0,t.jsx)("p",{children:"But\u2026 we end up with the risks on the right."}),(0,t.jsx)("p",{children:"We have the risk that the requirements change, or that the project takes longer than expected. "}),(0,t.jsx)("p",{children:"For big government IT projects, done to tender, this usually meant that the government ended up bailing out the supplier, and shouldering the extra expense."}),(0,t.jsx)("p",{children:"So as you can see, some of the risks on the left are the same as the ones on the right: the actions taken to manage them made no difference (or made things worse). "}),(0,t.jsx)("p",{children:"The inability to manage these risks led to the identification of a \u201cSoftware Crisis\u201d, in the 1970\u2019s."}),(0,t.jsx)("p",{children:"This is how we end up with Agile."}),(0,t.jsx)("p",{children:"Scrum is probably the most popular Agile methodology, so let\u2019s have a quick look at how that works for a second."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.031.jpg",alt:"Image of slide number 31"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So one of the key features - maybe the key feature - of Scrum is that you work in Sprints."}),(0,t.jsx)("p",{children:"These are like little 2 or 3-week windows of time, where you deliver something to production."}),(0,t.jsx)("p",{children:"You can see that practice in the middle there.   The reason Scrum recommends this is to address those risks on the left:"}),(0,t.jsx)("p",{children:"- The Risk that you don\u2019t build what the customers want the first time, "}),(0,t.jsx)("p",{children:"- and the risk that what the customers want changes while the project is in progress."}),(0,t.jsx)("p",{children:"But in order to do a Sprint, everyone needs to be given just enough work to do to fill that time, otherwise they\u2019re going to blow out of the end of the Sprint, or be sitting around with nothing to do.  "}),(0,t.jsx)("p",{children:"(Well, there\u2019s always something to do, but\u2026) "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.032.jpg",alt:"Image of slide number 32"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, that Coordination Risk is the major problem with doing Sprints.  "}),(0,t.jsx)("p",{children:"How do we address that Risk?"}),(0,t.jsx)("p",{children:"Well, Scrum recommends a bunch more practices to fix that."}),(0,t.jsx)("p",{children:"Like Retrospectives, where you try and learn what went wrong in the previous sprint."}),(0,t.jsx)("p",{children:"Daily standup meetings, where you keep track of where everyone is, and check they\u2019re all going to arrive on time."}),(0,t.jsx)("p",{children:"Planning Poker:  this is a kind of estimating game which is done to figure out how much work is going to be put in the Sprint"}),(0,t.jsx)("p",{children:"And a Scrum goal, where everyone commits to achieving some kind of goal with the Sprint, and working towards that.   "}),(0,t.jsx)("p",{children:"Having a goal is a great way of Coordinating people so they don\u2019t accidentally work antagonistically, with one person doing something that undoes what another is doing."}),(0,t.jsx)("p",{children:"But obviously, all that stuff takes time and effort, which may be better spent elsewhere.  "}),(0,t.jsx)("p",{children:"If you didn\u2019t have that Coordination Risk problem, you might not have to do some of this other stuff."}),(0,t.jsx)("p",{children:"And the Coordination Risk problem is there because you\u2019re doing Sprints.  "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.033.jpg",alt:"Image of slide number 33"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Another Agile Practice then: Refactoring."}),(0,t.jsx)("p",{children:"What is the value of it?  Refactoring is addressing Complexity Risk in your code-base.  "}),(0,t.jsx)("p",{children:"That is, the weight of complexity in the codebase, and its resistance to change and comprehension."}),(0,t.jsx)("p",{children:"Projects can sometimes drown in their own complexity, the so-called \u201cbig balls of mud\u201d.  So this is a Risk."}),(0,t.jsx)("p",{children:"And Technical Debt is an unnecessary excess of this.  A lot of the Complexity Risk is risk you\u2019ve taken on because you want to deliver functionality to people, quickly.  But sometimes, it accrues accidentally, or because you take short-cuts.  "}),(0,t.jsx)("p",{children:"Ideas gets removed, but the code stays complicated.  That\u2019s Technical Debt."}),(0,t.jsx)("p",{children:"So, you refactor."}),(0,t.jsx)("p",{children:"But that can take time and sometimes it doesn\u2019t work out.  "}),(0,t.jsx)("p",{children:"So like the game of Roulette, I\u2019ve labelled these parts of the diagram as the \u201cPayoff\u201d and the \u201cStake\u201d:  it\u2019s like a bet."}),(0,t.jsx)("p",{children:"You\u2019re betting that you can move to this new place on the Risk Landscape where there is less Complexity Risk.   "}),(0,t.jsx)("p",{children:"But sometimes, that place isn\u2019t better.  We\u2019re not all-seeing oracles.  Our Internal Models are limited. "}),(0,t.jsx)("p",{children:"Sometimes, your refactor doesn\u2019t work out and your amazing simplifying assumption doesn\u2019t pay off."}),(0,t.jsx)("p",{children:"Let\u2019s look one last one."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.034.jpg",alt:"Image of slide number 34"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"How should we look at DevOps?"}),(0,t.jsx)("p",{children:"The promise of devops is that we can apply automation of processes, and automated testing, to reduce schedule risk and deliver value faster.  "}),(0,t.jsx)("p",{children:"On the one hand, this feels quite agile-y, but it\u2019s taken a lot less time to come about.  So, in a way, it feels like banks are learning faster than they were before\u2026 we\u2019ve gone from 15-20 years for an Agile revolution to about 3 or 4 years for Devops revolution."}),(0,t.jsx)("p",{children:"This is a massive improvement!"}),(0,t.jsx)("p",{children:"However, it also feels like a way to \u201cstrip back\u201d a lot of those Operational Risk controls that were mandated by Basel 2 and later regulations.   "}),(0,t.jsx)("p",{children:"Because automation means sacrificing human oversight:  we\u2019re going to end up with more agency risk as a result.  That is: the chance that people maliciously or accidentally do things in production we don\u2019t want them to."}),(0,t.jsx)("p",{children:"I have a colleague at Morgan Stanley who basically believes that DevOps is illegal for banks, that Development and Operations should not be joined because it breaks regulations."}),(0,t.jsx)("p",{children:"It\u2019s like the see-saw went too far in the direction of locking down production environments, and has now had to go back the other way."}),(0,t.jsx)("p",{children:"There is obviously no \u201cright answer\u201d to this\u2026 we might see this pendulum swing back and forth a bit more."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.035.jpg",alt:"Image of slide number 35"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, we\u2019ve basically been looking at JUnit, DevOps, Waterfall, and Scrum from the perspective of what risks they manage."}),(0,t.jsx)("p",{children:"And, as we saw, this was something Kent Beck was on about a lot."}),(0,t.jsx)("p",{children:"But it\u2019s easy to lose sight of this as the underlying physics while you are working in an agile team, and just focus on doing the agile. "}),(0,t.jsx)("p",{children:"That is - applying agile practices in places where they aren\u2019t really relevant."}),(0,t.jsx)("p",{children:"We have to make sure we use the right tools for the job."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.036.jpg",alt:"Image of slide number 36"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"\u2014Different Practices are useful for dealing with different risks."}),(0,t.jsx)("p",{children:"So, both Waterfall and Scrum have different practices, and those practices address different risks\u2026 and also lead to new risks."}),(0,t.jsx)("p",{children:"Hopefully, the new risks are more palatable than the old ones.  If this doesn\u2019t materialise, then we feel the methodology is failing us. "}),(0,t.jsx)("p",{children:"So the practices need to fit the risks.  "}),(0,t.jsx)("p",{children:"It feels like this happens a lot in life already.  "}),(0,t.jsx)("p",{children:"I can buy Car Insurance, to cover risks related to my car."}),(0,t.jsx)("p",{children:"Or Travel Insurance, for risks I face going abroad."}),(0,t.jsx)("p",{children:"I don\u2019t want my house built in an Agile way.  I want someone to design it up-front, and give me a quote, and show me what it will look like. "}),(0,t.jsx)("p",{children:"A friend I know went on an agile course last year, and during it, they asked him and his team on the day to build a lego house in an Agile way.  He was massively enthusiastic about this task.  \u201cThe requirements changed so we added an extra bit and some new windows, and then they asked for a bit for the dog\u2026\u201d and so on."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.037.jpg",alt:"Image of slide number 37"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"I found this image online of some people doing the same thing.  If anything this woman\u2019s house is better than his.  "}),(0,t.jsx)("p",{children:"But honestly, I don\u2019t think this is a great advertisement for Agile techniques.  It\u2019s totally the wrong domain."}),(0,t.jsx)("p",{children:"Agile techniques are appropriate for managing certain risks. "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.038.jpg",alt:"Image of slide number 38"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"So, maybe what Risk-First is, is that I\u2019m now sliding back down that Hype Cycle curve, into the \u201cTrough of Disillusionment\u201d, and I\u2019m trying to figure out what\u2019s useful and what\u2019s not, in the Agile world."}),(0,t.jsx)("p",{children:"Because the idea came a couple of years ago when I was on a project using Scrum:"})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.039.jpg",alt:"Image of slide number 39"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"\u2014-"}),(0,t.jsx)("p",{children:"So, Risk-First is like a reaction to the Agile Hype-Cycle, applying agile wherever we can."}),(0,t.jsx)("p",{children:"But there\u2019s another problem nowadays, which is the changing nature of agile."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.040.jpg",alt:"Image of slide number 40"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"There\u2019s a movement now called post-agile, which you can read about on-line.  "}),(0,t.jsx)("p",{children:"And here are two examples.  On the left, Ron Jeffries, one of the original founders of the agile manifesto."}),(0,t.jsx)("p",{children:"On the right, Martin Fowler, also having a problem with \u201cThe Agile Industrial Complex\u201d."}),(0,t.jsx)("p",{children:"Agile is big business.  It\u2019s not just a set of principles now, it\u2019s an industry that wants to sell you training courses, books, accreditation.   "}),(0,t.jsx)("p",{children:"These guys are kind of mourning that change."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.041.jpg",alt:"Image of slide number 41"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"When Kent Beck and Ron Jeffries and Martin Fowler got together to write the agile manifesto, the software landscape was very different than today."}),(0,t.jsx)("p",{children:"JUnit was a really early open-source library!  You could use Tomcat or Apache\u2026 or, maybe that was about it."}),(0,t.jsx)("p",{children:"The landscape has changed. "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.042.jpg",alt:"Image of slide number 42"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Working in IT is really interesting.  Every day is Christmas Eve.  There are always new technologies to play with, new ideas to look at new practices to try.  This is one of the reasons why it\u2019s such a fun, crazy career to work in."}),(0,t.jsx)("p",{children:"But, people get carried away with things, as we\u2019ve seen in the hype-cycle."}),(0,t.jsx)("p",{children:"It\u2019s easy to get caught up in hype: Blockchain, AI, Big Data, etc."})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.043.jpg",alt:"Image of slide number 43"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"What\u2019s getting harder and harder now, is figuring out which tools to use.  Not just methodologies, or practices, like we\u2019ve looked at today, but tools of all kinds. "}),(0,t.jsx)("p",{children:"Because there are so many languages, so many libraries.   A lot of them are really good."}),(0,t.jsx)("p",{children:"It\u2019s easy for me to stand here and say: use the libraries or tools or languages that help you address the most risk.  This seems like the underlying physics of software development, agile being one way of doing that.  "}),(0,t.jsx)("p",{children:"But what\u2019s a much harder problem now is curation.  How do I figure out which tool or library to use?   How do I know it\u2019ll solve my problems?  "})]})]}),(0,t.jsxs)("div",{class:"slide slide--bordered",children:[(0,t.jsx)("div",{class:"slide-image",children:(0,t.jsx)("img",{src:"/img/presentations/onion/images/images.044.jpg",alt:"Image of slide number 44"})}),(0,t.jsxs)("div",{class:"slide-notes",children:[(0,t.jsx)("p",{children:"Who\u2019s seen this game?  "}),(0,t.jsx)("p",{children:"This is some screenshots from a game you can play on the internet called \u201cPokemon or Big Data\u201d.  It\u2019s literally poking fun at this exact problem I\u2019m talking about."}),(0,t.jsx)("p",{children:"You have to decide whether the name of something, like \u201cVulpix\u201d is the name of a piece of Big Data software, or a Pokemon. "}),(0,t.jsx)("p",{children:"So at the moment, we have maybe a few million developers on the internet.  I\u2019m guessing.   What happens when we have a few hundred million, or a few billion, as we might in 10 years time."}),(0,t.jsx)("p",{children:"How do I go the right way?  How do I choose the right thing to use?"}),(0,t.jsx)("p",{children:"For me, this is a big, and growing risk, and I think this is something that we\u2019re going to need to address over the next 20 years."})]})]})]}),"\n",(0,t.jsxs)("p",{class:"credits",children:["Made with ",(0,t.jsx)("a",{href:"https://keynote-extractor.com",children:"Keynote Extractor"}),"."]})]})}function c(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h()}},28453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>r});var t=i(96540);const a={},n=t.createContext(a);function o(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);